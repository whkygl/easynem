library(vegan)
data(mite)
data(mite.env)
View(mite.env)
library(vegan)
data(mite)
data(mite.env)
data(mite.pcnm)
mod <- varpart(mite, mite.env, mite.pcnm, transfo="hellinger")
mod
plot(mod, bg = c("hotpink","skyblue"))
mod <- varpart(Topo, ~ SubsDens + WatrCont, ~ Substrate + Shrub, data=mite.env, transfo="hel")
mod
plot(mod, bg=2:4)
---
title: "easynem_manual"
knitr::opts_chunk$set(echo = TRUE)
devtools::install_github("whkygl/easynem")
devtools::install_github("whkygl/easynem")
bac <- read_nem(tab = easynem_example("bacotu.csv"), tax = easynem_example("bactax.csv"))
devtools::install_github("whkygl/easynem")
library(easynem)
bac <- read_nem(tab = easynem_example("bacotu.csv"), tax = easynem_example("bactax.csv"))
devtools::install_github("whkygl/easynem")
library(easynem)
bac <- read_nem(tab = easynem_example("bacotu.csv"), tax = easynem_example("bactax.csv"))
meta <- read_nem(meta = easynem_example("metadata.csv"))
devtools::install_github("whkygl/easynem")
library(easynem)
bac <- read_nem(tab = easynem_example("bacotu.csv"), tax = easynem_example("bactax.csv"))
meta <- read_nem(meta = easynem_example("meta.csv"))
install.packages("htmltoos")
library(htmltools)
remove.packages("htmltools")
library(xfun)
remove.packages("xfun")
install.packages("xfun")
knitr::opts_chunk$set(echo = TRUE)
devtools::install_github("whkygl/easynem")
library(easynem)
bac <- read_nem(tab = easynem_example("bacotu.csv"), tax = easynem_example("bactax.csv"))
meta <- read_nem(meta = easynem_example("meta.csv"))
nem_database()
# nem_database()
meta@meta
hehe2 <- trans_formula(hehe,pH,~1/x)
hehe2 <- trans_formula(meta,pH,~1/x)
hehe2@meta
hehe2 <- trans_formula(meta,pH,~1/x)
hehe3 <- trans_formula(meta,c(pH,SOC),~1/x)
meta@meta
resultmeta = meta@meta
View(resultmeta)
var = colnames(resultmeta)[5:10]
resultmeta[var]
resultmeta[[var]]
formu = ~1/x
class(formu)
formu[[2]]
?eval
resultmeta[var] <- eval(formu[[2]], list(x = resultmeta[var]), environment(formu))
resultmeta[var]
knitr::opts_chunk$set(echo = TRUE)
devtools::install_github("whkygl/easynem")
library(easynem)
bac <- read_nem(tab = easynem_example("bacotu.csv"), tax = easynem_example("bactax.csv"))
meta <- read_nem(meta = easynem_example("meta.csv"))
hehe2 = trans_norm(data = bac, method = total)
hehe2 = trans_norm(data = bac, method = percent)
knitr::opts_chunk$set(echo = TRUE)
devtools::install_github("whkygl/easynem")
library(easynem)
bac <- read_nem(tab = easynem_example("bacotu.csv"), tax = easynem_example("bactax.csv"))
meta <- read_nem(meta = easynem_example("meta.csv"))
hehe2 = trans_norm(data = bac, method = total)
hehe2 = trans_norm(data = bac, method = total)
hehe2 = trans_norm(data = bac, method = percent)
hehe2@tab
hehe2 = trans_norm(data = bac, method = total)
colSums(hehe2@tab[,-1])
hehe2 = trans_norm(data = bac, method = percent)
colSums(hehe2@tab[,-1])
hehe2 <- trans_rare(bac, 20000)
colSums(hehe2@tab[,-1])
hehe2 <- trans_rare(bac, 0)
colSums(hehe2@tab[,-1])
hehe <- filter_name(target = meta, season == "Summer")
hehe <- filter_name(bac, target = meta, season == "Summer")
bac
bac@meta
bac <- read_nem(tab = easynem_example("bacotu.csv"), tax = easynem_example("bactax.csv"), meta = easynem_example("meta.csv"))
hehe <- filter_name(bac, target = meta, season == "Summer")
hehe@meta
bac@meta
hehe <- filter_name(bac, target = meta, season == "Spring")
hehe@meta
hehe@tax
hehe <- filter_name(bac, target = meta, Phylum == "Actinobacteria")
hehe <- filter_name(bac, target = tax, Phylum == "Actinobacteria")
hehe@tab
hehe@tax
bac@tab
hehe <- filter_name(bac, target = tab, OTUID == "ASV_6841")
hehe@tab
hehe <- filter_name(bac, target = tab, OTUID == "ASV_6941")
hehe@tab
hehe <- filter_name(bac, target = meta, season == "Spring")
hehe@tab
hehe2 <- filter_num(bac, num = 100)
hehe2@tab
View(hehe2)
View(bac)
View(hehe2)
hehe2 <- filter_num(bac, num = 0.9)
View(hehe2)
pca = calc_beta(bac, pca, con_crop, method = "bray")
?pairwiseAdonis::pairwise.adonis
pca = calc_beta(bac, pca, con_crop, method = "bray")
pca = calc_beta(bac, pca, con_crop)
pca = calc_beta(bac, pcoa, con_crop, method = "bray")
pca = calc_beta(bac, nmds, con_crop, method = "bray")
pca = calc_beta(bac, nmds, con_crop, bray)
pca
pca = calc_beta(bac, nmds, con_crop, method = bray)
pca
pca = calc_beta(bac, nmds, con_crop, method = bray)
pca
pca = calc_beta(bac, nmds, con_crop, method = bray)
pca
pca
pca
pca = calc_beta(bac, pca, con_crop, method = bray)
pca
pcoa = calc_beta(bac, pcoa, con_crop, method = bray)
pcoa
p = nem_plot(pcoa)
p
nmds = calc_beta(bac, nmds, con_crop, method = bray)
p = nem_plot(pcoa)
p
p = nem_plot(nmds)
p
p = nem_plot(nmds,level = 0.6)
p
p = nem_plot(nmds,level = 1)
p
p = nem_plot(nmds,level = 0.9)
p
p = nem_plot(nmds,level = 0.1)
p
p = nem_plot(nmds,level = 1, type = 0)
p = nem_plot(nmds,level = 1, type = 1)
p
p = nem_plot(nmds,level = 1, type = 2)
p = nem_plot(nmds,level = 0.6, type = 2)
p = nem_plot(nmds,level = 0.6, type = 1)
p
p = nem_plot(nmds,level = 0.6, type = 2)
p
p = nem_plot(nmds,level = 1, type = 1)
p
p = nem_plot(nmds,level = 1)
p = nem_plot(nmds,level = 0.6,type = 1)
p
p = nem_plot(nmds,level = 0.6,type = 2)
p
p = nem_plot(nmds,level = 0.6,type = 1)
p
nmds
View(nmds)
nmds@meta
bac@meta
which(names(bac@meta) == "con_crop")
which(names(bac@meta) == c("con_crop","condition"))
which(names(bac@meta) == c(condition"))
)
which(names(bac@meta) ==condition")
)
)
)
which(names(bac@meta) == c("con_crop"))
which(names(bac@meta) == c("condition"))
?`%in%`
%in%
`%in%`
?%in%
which(names(bac@meta) %in% c("con_crop","condition"))
nmds@meta
meta
meta=meta@meta
meta
meta$`.group_all` = paste(meta[,2], meta[,3], sep = "_")
meta
View(meta)
?mutate
hehe = mutate(meta, `.group_all` = paste(meta[,2], meta[,3], sep = "_")
)
hehe = dplyr::mutate(meta, `.group_all` = paste(meta[,2], meta[,3], sep = "_")
)
View(hehe)
hehe = dplyr::mutate(meta, `.group_all` = paste(con_crop, season, sep = "_"))
hehe = dplyr::mutate(meta, `.group_all` = paste("con_crop", "season", sep = "_"))
hehe = dplyr::mutate(meta, `.group_all` = paste(con_crop, season, sep = "_"))
hehe = dplyr::mutate(meta, `.group_all` = paste(2, 3, sep = "_"))
hehe = dplyr::mutate(meta, `.group_all` = paste(meta[[2]], meta[[3]], sep = "_"))
meta$`.group_all` = paste(meta[,2], meta[,3], sep = "_")
meta = meta@meta
meta = bac@meta
meta
hehe = dplyr::mutate(meta, `.group_all` = paste(meta[[2]], meta[[3]], sep = "_"))
View(hehe)
meta
View(meta)
nmds
?case_when()
knitr::opts_chunk$set(echo = TRUE)
devtools::install_github("whkygl/easynem")
library(easynem)
bac <- read_nem(tab = easynem_example("bacotu.csv"), tax = easynem_example("bactax.csv"), meta = easynem_example("meta.csv"))
meta <- read_nem(meta = easynem_example("meta.csv"))
nmds = calc_beta(bac, nmds, con_crop, method = bray)
nmds
p = nem_plot(nmds)
p
nmds = calc_beta2(bac, nmds, con_crop, season, method = bray)
nmds
nmds = calc_beta(bac, nmds, con_crop, method = bray)
nmds
plot(nmds)
nem_plot(nmds)
p=nem_plot(nmds)
p
pcoa = calc_beta2(bac, pcoa, con_crop, season, method = bray)
pcoa
knitr::opts_chunk$set(echo = TRUE)
devtools::install_github("whkygl/easynem")
library(easynem)
bac <- read_nem(tab = easynem_example("bacotu.csv"), tax = easynem_example("bactax.csv"), meta = easynem_example("meta.csv"))
meta <- read_nem(meta = easynem_example("meta.csv"))
pcoa = calc_beta2(bac, pcoa, con_crop, season, method = bray)
p = nem_plot(pcoa, type = 1)
p = nem_plot(pcoa, type = 1)
p
p = nem_plot(pcoa, type = 2)
p
