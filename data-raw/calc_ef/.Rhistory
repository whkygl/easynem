names(htab2) = "HF"
htab2$SampleID = rownames(htab2)
htab2
ftab = alltab |> dplyr::filter(!!rlang::sym("feeding") %in% c(2))
ftab = ftab[,c(names(tab),"cp_value", "GenavgMass")]
ftab2 = as.data.frame(colSums(ftab[,-c(1, ncol(ftab), ncol(ftab)-1)]*(0.1*(ftab$GenavgMass/ftab$cp_value/12)+0.0159*(ftab$GenavgMass^0.75))))
names(ftab2) = "FF"
ftab2$SampleID = rownames(ftab2)
ftab2
htab
alltab2 = otab2 |> dplyr::full_join(btab2, by = "SampleID") |> dplyr::full_join(htab2, by = "SampleID") |> dplyr::full_join(ftab2, by = "SampleID")
View(alltab2)
alltab2 = alltab2 |> dplyr::select(!!rlang::sym("SampleID"), dplyr::everything())
View(alltab2)
alltab2$FF
alltab2$HF
alltab2$OF
alltab2$BF
?signif
otab2$OF = signif(otab2$OF, 2)
otab2
otab2 = as.data.frame(colSums(otab[,-c(1, ncol(otab), ncol(otab)-1)]*(0.1*(otab$GenavgMass/otab$cp_value/12)+0.0159*(otab$GenavgMass^0.75))))
names(otab2) = "OF"
otab2$OF = signif(otab2$OF, 2)
otab2$SampleID = rownames(otab2)
btab = alltab |> dplyr::filter(!!rlang::sym("feeding") %in% c(3))
btab = btab[,c(names(tab),"cp_value", "GenavgMass")]
btab2 = as.data.frame(colSums(btab[,-c(1, ncol(btab), ncol(btab)-1)]*(0.1*(btab$GenavgMass/btab$cp_value/12)+0.0159*(btab$GenavgMass^0.75))))
names(btab2) = "BF"
btab2$SampleID = rownames(btab2)
btab2$BF = signif(btab2$BF, 2)
htab = alltab |> dplyr::filter(!!rlang::sym("feeding") %in% c(1))
htab = htab[,c(names(tab),"cp_value", "GenavgMass")]
htab2 = as.data.frame(colSums(htab[,-c(1, ncol(htab), ncol(htab)-1)]*(0.1*(htab$GenavgMass/htab$cp_value/12)+0.0159*(htab$GenavgMass^0.75))))
names(htab2) = "HF"
htab2$SampleID = rownames(htab2)
htab2$HF = signif(htab2$HF, 2)
ftab = alltab |> dplyr::filter(!!rlang::sym("feeding") %in% c(2))
ftab = ftab[,c(names(tab),"cp_value", "GenavgMass")]
ftab2 = as.data.frame(colSums(ftab[,-c(1, ncol(ftab), ncol(ftab)-1)]*(0.1*(ftab$GenavgMass/ftab$cp_value/12)+0.0159*(ftab$GenavgMass^0.75))))
names(ftab2) = "FF"
ftab2$SampleID = rownames(ftab2)
ftab2$FF = signif(ftab2$FF, 2)
alltab2 = otab2 |> dplyr::full_join(btab2, by = "SampleID") |> dplyr::full_join(htab2, by = "SampleID") |> dplyr::full_join(ftab2, by = "SampleID")
alltab2 = alltab2 |> dplyr::select(!!rlang::sym("SampleID"), dplyr::everything())
View(alltab2)
btab
View(alltab2)
View(alltab2)
alltab2$FALL = rowSums(alltab2[,-1])
View(alltab2)
alltab2
btab2
btab
alltab
View(alltab)
View(btab)
c(1,2,3)/c(4,5,6)
c(1,2,3)+c(4,5,6)
View(btab)
View(btab)
bp = colSums(btab[,-c(1, ncol(btab), ncol(btab)-1)])/(colSums(btab[,-c(1, ncol(btab), ncol(btab)-1)]) + colSums(htab[,-c(1, ncol(htab), ncol(htab)-1)]) + colSums(ftab[,-c(1, ncol(ftab), ncol(ftab)-1)]))
bp
bp = as.data.frame(bp)
View(bp)
hp = colSums(htab[,-c(1, ncol(htab), ncol(htab)-1)])/(colSums(btab[,-c(1, ncol(btab), ncol(btab)-1)]) + colSums(htab[,-c(1, ncol(htab), ncol(htab)-1)]) + colSums(ftab[,-c(1, ncol(ftab), ncol(ftab)-1)]))
hp = as.data.frame(hp)
hp
fp = colSums(ftab[,-c(1, ncol(ftab), ncol(ftab)-1)])/(colSums(btab[,-c(1, ncol(btab), ncol(btab)-1)]) + colSums(htab[,-c(1, ncol(htab), ncol(htab)-1)]) + colSums(ftab[,-c(1, ncol(ftab), ncol(ftab)-1)]))
fp = as.data.frame(fp)
fp
bp$SampleID = rownames(bp)
hp$SampleID = rownames(hp)
fp$SampleID = rownames(fp)
View(alltab2)
alltab2 = alltab2 |> dplyr::full_join(bp, by = "SampleID") |> dplyr::full_join(hp, by = "SampleID") |> dplyr::full_join(fp, by = "SampleID")
View(alltab2)
library(tidyverse)
?mutate
View(alltab2)
alltab2
alltab2 = alltab2 |> dplyr::mutate(fbo = (FALL + (OF * bp))/0.5)
View(alltab2)
View(alltab)
View(alltab2)
alltab2 = alltab2 |> dplyr::mutate(fbo = (OF + (OF * bp))/0.5)
View(alltab2)
alltab2 = alltab2 |> dplyr::mutate(fbo = (OF + (OF * bp))/0.5)
alltab2 = alltab2 |> dplyr::mutate(fbo = (OF + (OF * bp))/0.5)
alltab2 = alltab2 |> dplyr::mutate(fho = (OF + (OF * hp))/0.5)
alltab2 = alltab2 |> dplyr::mutate(ffo = (OF + (OF * fp))/0.5)
alltab2
alltab2 = alltab2 |> dplyr::mutate(fbo = OF /0.5 * bp)
alltab2 = alltab2 |> dplyr::mutate(fho = OF /0.5 * hp)
alltab2 = alltab2 |> dplyr::mutate(ffo = OF /0.5 * fp)
View(alltab2)
alltab2
alltab2 = alltab2 |> dplyr::mutate(frb = (BF+(OF /0.5 * bp))/0.6)
alltab2 = alltab2 |> dplyr::mutate(frh = (HF+(OF /0.5 * hp))/0.25)
alltab2 = alltab2 |> dplyr::mutate(frf = (FF+(OF /0.5 * fp))/0.38)
View(alltab2)
?std
?sd
alltab2 = alltab2 |> dplyr::mutate(U = mean(fbo,fho, ffo, frb,frh,frf)/std(fbo,fho, ffo, frb,frh,frf))
# 创建一个示例数据框
df <- data.frame(
col1 = rnorm(10),
col2 = rnorm(10),
col3 = rnorm(10),
col4 = rnorm(10),
col5 = rnorm(10) # 第五列为例，不参与计算
)
# 计算前四列的均值
mean_values <- colMeans(df[, 1:4])
# 计算前四列的标准差
sd_values <- apply(df[, 1:4], 2, sd)
# 计算均值除以标准差
result <- mean_values / sd_values
# 输出结果
print(result)
df
alltab2
alltab2 = alltab2 |> dplyr::mutate(U = std(fbo,fho, ffo, frb,frh,frf))
alltab2 = alltab2 |> dplyr::mutate(U = sd(fbo,fho, ffo, frb,frh,frf))
alltab2 = alltab2 |> dplyr::mutate(U = sd(c(fbo,fho, ffo, frb,frh,frf))))
alltab2 = alltab2 |> dplyr::mutate(U = sd(c(fbo,fho, ffo, frb,frh,frf)))
View(alltab2)
# 加载dplyr包
library(dplyr)
# 创建一个示例数据框
df <- data.frame(
col1 = rnorm(10),
col2 = rnorm(10),
col3 = rnorm(10),
col4 = rnorm(10),
col5 = rnorm(10) # 第五列为例，不参与计算
)
# 使用mutate对前四列求均值并添加为新列mean_of_first_four
df <- df %>%
mutate(mean_of_first_four = rowMeans(select(., 1:4)))
View(df)
# 创建一个示例数据框
df <- data.frame(
col1 = c(1,2,3,4),
col2 = c(4,8,12,12),
col3 = c(1,2,3,4),
col4 = c(4,4,4,4),
col5 = c(8,8,8,8) # 第五列为例，不参与计算
)
# 使用mutate对前四列求均值并添加为新列mean_of_first_four
df <- df %>%
mutate(mean_of_first_four = rowMeans(select(., 1:4)))
# 输出结果
print(df)
View(alltab2)
alltab2 = alltab2 |> dplyr::mutate(U = rowMeans(select((ncol(alltab2)-5):ncol(alltab2))))
(ncol(alltab2)-5):ncol(alltab2)
View(alltab2)
View(alltab2)
View(alltab2)
alltab2 = alltab2 |> dplyr::mutate(U = rowMeans(select(10:15)))
alltab2 = dplyr::mutate(alltab2, U = rowMeans(select(alltab2,10:15)))
View(alltab2)
# 创建一个示例数据框
df <- data.frame(
col1 = c(1,2,3,4),
col2 = c(4,8,12,12),
col3 = c(1,2,3,4),
col4 = c(4,4,4,4),
col5 = c(8,8,8,8) # 第五列为例，不参与计算
)
# 使用mutate对前四列求均值并添加为新列mean_of_first_four
df <- df %>%
rowwise() %>%
mutate(sd_rows = sd(c_across(col1:col4)))
df
sd(c(1,4,1,4))
sd(c(4,12,4,4))
?c_across
?sd
alltab2 = dplyr::mutate(alltab2, U = rowMeans(select(alltab2,10:15))/stats::sd(dplyr::c_across(10:15)))
View(alltab2)
data = hehe
.group = "con_crop"
# data = hehe
# .group = "con_crop"
.ef = methods::new("ef")
nemindex = data@result
tab = data@tab
tax = data@tax
meta = data@meta
.group = deparse(substitute(.group))
alltab = merge(tab, tax, by = "OTUID")
otab = alltab |> dplyr::filter(!!rlang::sym("feeding") %in% c(5,8))
otab = otab[,c(names(tab),"cp_value", "GenavgMass")]
otab2 = as.data.frame(colSums(otab[,-c(1, ncol(otab), ncol(otab)-1)]*(0.104*(otab$GenavgMass/otab$cp_value/12)+0.0159*(otab$GenavgMass^0.75))))
names(otab2) = "OF"
otab2$OF = signif(otab2$OF, 2)
otab2$SampleID = rownames(otab2)
btab = alltab |> dplyr::filter(!!rlang::sym("feeding") %in% c(3))
btab = btab[,c(names(tab),"cp_value", "GenavgMass")]
btab2 = as.data.frame(colSums(btab[,-c(1, ncol(btab), ncol(btab)-1)]*(0.104*(btab$GenavgMass/btab$cp_value/12)+0.0159*(btab$GenavgMass^0.75))))
names(btab2) = "BF"
btab2$SampleID = rownames(btab2)
btab2$BF = signif(btab2$BF, 2)
htab = alltab |> dplyr::filter(!!rlang::sym("feeding") %in% c(1))
htab = htab[,c(names(tab),"cp_value", "GenavgMass")]
htab2 = as.data.frame(colSums(htab[,-c(1, ncol(htab), ncol(htab)-1)]*(0.104*(htab$GenavgMass/htab$cp_value/12)+0.0159*(htab$GenavgMass^0.75))))
names(htab2) = "HF"
htab2$SampleID = rownames(htab2)
htab2$HF = signif(htab2$HF, 2)
ftab = alltab |> dplyr::filter(!!rlang::sym("feeding") %in% c(2))
ftab = ftab[,c(names(tab),"cp_value", "GenavgMass")]
ftab2 = as.data.frame(colSums(ftab[,-c(1, ncol(ftab), ncol(ftab)-1)]*(0.104*(ftab$GenavgMass/ftab$cp_value/12)+0.0159*(ftab$GenavgMass^0.75))))
names(ftab2) = "FF"
ftab2$SampleID = rownames(ftab2)
ftab2$FF = signif(ftab2$FF, 2)
alltab2 = otab2 |> dplyr::full_join(btab2, by = "SampleID") |> dplyr::full_join(htab2, by = "SampleID") |> dplyr::full_join(ftab2, by = "SampleID")
alltab2 = alltab2 |> dplyr::select(!!rlang::sym("SampleID"), dplyr::everything())
alltab2$FALL = rowSums(alltab2[,-1])
bp = colSums(btab[,-c(1, ncol(btab), ncol(btab)-1)])/(colSums(btab[,-c(1, ncol(btab), ncol(btab)-1)]) + colSums(htab[,-c(1, ncol(htab), ncol(htab)-1)]) + colSums(ftab[,-c(1, ncol(ftab), ncol(ftab)-1)]))
bp = as.data.frame(bp)
bp$SampleID = rownames(bp)
hp = colSums(htab[,-c(1, ncol(htab), ncol(htab)-1)])/(colSums(btab[,-c(1, ncol(btab), ncol(btab)-1)]) + colSums(htab[,-c(1, ncol(htab), ncol(htab)-1)]) + colSums(ftab[,-c(1, ncol(ftab), ncol(ftab)-1)]))
hp = as.data.frame(hp)
hp$SampleID = rownames(hp)
fp = colSums(ftab[,-c(1, ncol(ftab), ncol(ftab)-1)])/(colSums(btab[,-c(1, ncol(btab), ncol(btab)-1)]) + colSums(htab[,-c(1, ncol(htab), ncol(htab)-1)]) + colSums(ftab[,-c(1, ncol(ftab), ncol(ftab)-1)]))
fp = as.data.frame(fp)
fp$SampleID = rownames(fp)
alltab2 = alltab2 |> dplyr::full_join(bp, by = "SampleID") |> dplyr::full_join(hp, by = "SampleID") |> dplyr::full_join(fp, by = "SampleID")
alltab2 = alltab2 |> dplyr::mutate(fbo = OF /0.5 * bp)
alltab2 = alltab2 |> dplyr::mutate(fho = OF /0.5 * hp)
alltab2 = alltab2 |> dplyr::mutate(ffo = OF /0.5 * fp)
alltab2 = alltab2 |> dplyr::mutate(frb = (BF+(OF /0.5 * bp))/0.6)
alltab2 = alltab2 |> dplyr::mutate(frh = (HF+(OF /0.5 * hp))/0.25)
alltab2 = alltab2 |> dplyr::mutate(frf = (FF+(OF /0.5 * fp))/0.38)
View(alltab2)
alltab2 = dplyr::mutate(alltab2, U = rowMeans(select(alltab2,10:15))/stats::sd(dplyr::c_across(10:15)))
data = hehe
.group = "con_crop"
# data = hehe
# .group = "con_crop"
.ef = methods::new("ef")
nemindex = data@result
tab = data@tab
tax = data@tax
meta = data@meta
.group = deparse(substitute(.group))
alltab = merge(tab, tax, by = "OTUID")
otab = alltab |> dplyr::filter(!!rlang::sym("feeding") %in% c(5,8))
otab
View(otab)
alltab2
View(alltab2)
otab
otab = otab[,c(names(tab),"cp_value", "GenavgMass")]
otab
otab2 = as.data.frame(colSums(otab[,-c(1, ncol(otab), ncol(otab)-1)]*(0.104*(otab$GenavgMass/otab$cp_value/12)+0.0159*(otab$GenavgMass^0.75))))
names(otab2) = "OF"
otab2$OF = signif(otab2$OF, 2)
otab2$SampleID = rownames(otab2)
otab2
View(alltab2)
otab3 = as.data.frame(colSums(otab[,-c(1, ncol(otab), ncol(otab)-1)]*otab$GenavgMass))
otab3
names(otab3) = "OM"
otab3$SampleID = rownames(otab3)
otab3
otab2 = merge(otab2,otab3, by = "SampleID")
otab2
btab = alltab |> dplyr::filter(!!rlang::sym("feeding") %in% c(3))
btab = btab[,c(names(tab),"cp_value", "GenavgMass")]
btab2 = as.data.frame(colSums(btab[,-c(1, ncol(btab), ncol(btab)-1)]*(0.104*(btab$GenavgMass/btab$cp_value/12)+0.0159*(btab$GenavgMass^0.75))))
names(btab2) = "BF"
btab2$SampleID = rownames(btab2)
btab2$BF = signif(btab2$BF, 2)
btab3 = as.data.frame(colSums(btab[,-c(1, ncol(btab), ncol(btab)-1)]*btab$GenavgMass))
names(btab3) = "BM"
btab3$SampleID = rownames(btab3)
btab2 = merge(btab2,btab3, by = "SampleID")
htab = alltab |> dplyr::filter(!!rlang::sym("feeding") %in% c(1))
htab = htab[,c(names(tab),"cp_value", "GenavgMass")]
htab2 = as.data.frame(colSums(htab[,-c(1, ncol(htab), ncol(htab)-1)]*(0.104*(htab$GenavgMass/htab$cp_value/12)+0.0159*(htab$GenavgMass^0.75))))
names(htab2) = "HF"
htab2$SampleID = rownames(htab2)
htab2$HF = signif(htab2$HF, 2)
htab3 = as.data.frame(colSums(htab[,-c(1, ncol(htab), ncol(htab)-1)]*htab$GenavgMass))
names(htab3) = "HM"
htab3$SampleID = rownames(htab3)
htab2 = merge(htab2,htab3, by = "SampleID")
ftab = alltab |> dplyr::filter(!!rlang::sym("feeding") %in% c(2))
ftab = ftab[,c(names(tab),"cp_value", "GenavgMass")]
ftab2 = as.data.frame(colSums(ftab[,-c(1, ncol(ftab), ncol(ftab)-1)]*(0.104*(ftab$GenavgMass/ftab$cp_value/12)+0.0159*(ftab$GenavgMass^0.75))))
names(ftab2) = "FF"
ftab2$SampleID = rownames(ftab2)
ftab2$FF = signif(ftab2$FF, 2)
ftab3 = as.data.frame(colSums(ftab[,-c(1, ncol(ftab), ncol(ftab)-1)]*ftab$GenavgMass))
names(ftab3) = "FM"
ftab3$SampleID = rownames(ftab3)
ftab2 = merge(ftab2,ftab3, by = "SampleID")
alltab2 = otab2 |> dplyr::full_join(btab2, by = "SampleID") |> dplyr::full_join(htab2, by = "SampleID") |> dplyr::full_join(ftab2, by = "SampleID")
alltab2
otab2
alltab2
alltab2 = alltab2 |> dplyr::select(!!rlang::sym("SampleID"), dplyr::everything())
alltab2
bp = colSums(btab[,-c(1, ncol(btab), ncol(btab)-1)])/(colSums(btab[,-c(1, ncol(btab), ncol(btab)-1)]) + colSums(htab[,-c(1, ncol(htab), ncol(htab)-1)]) + colSums(ftab[,-c(1, ncol(ftab), ncol(ftab)-1)]))
bp = as.data.frame(bp)
bp$SampleID = rownames(bp)
hp = colSums(htab[,-c(1, ncol(htab), ncol(htab)-1)])/(colSums(btab[,-c(1, ncol(btab), ncol(btab)-1)]) + colSums(htab[,-c(1, ncol(htab), ncol(htab)-1)]) + colSums(ftab[,-c(1, ncol(ftab), ncol(ftab)-1)]))
hp = as.data.frame(hp)
hp$SampleID = rownames(hp)
fp = colSums(ftab[,-c(1, ncol(ftab), ncol(ftab)-1)])/(colSums(btab[,-c(1, ncol(btab), ncol(btab)-1)]) + colSums(htab[,-c(1, ncol(htab), ncol(htab)-1)]) + colSums(ftab[,-c(1, ncol(ftab), ncol(ftab)-1)]))
fp = as.data.frame(fp)
fp$SampleID = rownames(fp)
alltab2 = alltab2 |> dplyr::full_join(bp, by = "SampleID") |> dplyr::full_join(hp, by = "SampleID") |> dplyr::full_join(fp, by = "SampleID")
alltab2
View(alltab2)
alltab2 = alltab2 |> dplyr::mutate(fbo = OF /0.5 * bp)
alltab2 = alltab2 |> dplyr::mutate(fho = OF /0.5 * hp)
alltab2 = alltab2 |> dplyr::mutate(ffo = OF /0.5 * fp)
alltab2 = alltab2 |> dplyr::mutate(frb = (BF+(OF /0.5 * bp))/0.6)
alltab2 = alltab2 |> dplyr::mutate(frh = (HF+(OF /0.5 * hp))/0.25)
alltab2 = alltab2 |> dplyr::mutate(frf = (FF+(OF /0.5 * fp))/0.38)
View(alltab2)
alltab2 = dplyr::mutate(alltab2, U = rowMeans(select(alltab2,13:18))/stats::sd(dplyr::c_across(13:18)))
View(alltab2)
View(alltab2)
alltab2
meta
meta = meta[,c("SampleID", .group)]
.group
.group = "con_crop"
data = hehe
.group = "con_crop"
# data = hehe
# .group = "con_crop"
.ef = methods::new("ef")
nemindex = data@result
tab = data@tab
tax = data@tax
meta = data@meta
alltab = merge(tab, tax, by = "OTUID")
otab = alltab |> dplyr::filter(!!rlang::sym("feeding") %in% c(5,8))
otab = otab[,c(names(tab),"cp_value", "GenavgMass")]
otab2 = as.data.frame(colSums(otab[,-c(1, ncol(otab), ncol(otab)-1)]*(0.104*(otab$GenavgMass/otab$cp_value/12)+0.0159*(otab$GenavgMass^0.75))))
names(otab2) = "OF"
otab2$OF = signif(otab2$OF, 2)
otab2$SampleID = rownames(otab2)
otab3 = as.data.frame(colSums(otab[,-c(1, ncol(otab), ncol(otab)-1)]*otab$GenavgMass))
names(otab3) = "OM"
otab3$SampleID = rownames(otab3)
otab2 = merge(otab2,otab3, by = "SampleID")
btab = alltab |> dplyr::filter(!!rlang::sym("feeding") %in% c(3))
btab = btab[,c(names(tab),"cp_value", "GenavgMass")]
btab2 = as.data.frame(colSums(btab[,-c(1, ncol(btab), ncol(btab)-1)]*(0.104*(btab$GenavgMass/btab$cp_value/12)+0.0159*(btab$GenavgMass^0.75))))
names(btab2) = "BF"
btab2$SampleID = rownames(btab2)
btab2$BF = signif(btab2$BF, 2)
btab3 = as.data.frame(colSums(btab[,-c(1, ncol(btab), ncol(btab)-1)]*btab$GenavgMass))
names(btab3) = "BM"
btab3$SampleID = rownames(btab3)
btab2 = merge(btab2,btab3, by = "SampleID")
htab = alltab |> dplyr::filter(!!rlang::sym("feeding") %in% c(1))
htab = htab[,c(names(tab),"cp_value", "GenavgMass")]
htab2 = as.data.frame(colSums(htab[,-c(1, ncol(htab), ncol(htab)-1)]*(0.104*(htab$GenavgMass/htab$cp_value/12)+0.0159*(htab$GenavgMass^0.75))))
names(htab2) = "HF"
htab2$SampleID = rownames(htab2)
htab2$HF = signif(htab2$HF, 2)
htab3 = as.data.frame(colSums(htab[,-c(1, ncol(htab), ncol(htab)-1)]*htab$GenavgMass))
names(htab3) = "HM"
htab3$SampleID = rownames(htab3)
htab2 = merge(htab2,htab3, by = "SampleID")
ftab = alltab |> dplyr::filter(!!rlang::sym("feeding") %in% c(2))
ftab = ftab[,c(names(tab),"cp_value", "GenavgMass")]
ftab2 = as.data.frame(colSums(ftab[,-c(1, ncol(ftab), ncol(ftab)-1)]*(0.104*(ftab$GenavgMass/ftab$cp_value/12)+0.0159*(ftab$GenavgMass^0.75))))
names(ftab2) = "FF"
ftab2$SampleID = rownames(ftab2)
ftab2$FF = signif(ftab2$FF, 2)
ftab3 = as.data.frame(colSums(ftab[,-c(1, ncol(ftab), ncol(ftab)-1)]*ftab$GenavgMass))
names(ftab3) = "FM"
ftab3$SampleID = rownames(ftab3)
ftab2 = merge(ftab2,ftab3, by = "SampleID")
alltab2 = otab2 |> dplyr::full_join(btab2, by = "SampleID") |> dplyr::full_join(htab2, by = "SampleID") |> dplyr::full_join(ftab2, by = "SampleID")
alltab2 = alltab2 |> dplyr::select(!!rlang::sym("SampleID"), dplyr::everything())
bp = colSums(btab[,-c(1, ncol(btab), ncol(btab)-1)])/(colSums(btab[,-c(1, ncol(btab), ncol(btab)-1)]) + colSums(htab[,-c(1, ncol(htab), ncol(htab)-1)]) + colSums(ftab[,-c(1, ncol(ftab), ncol(ftab)-1)]))
bp = as.data.frame(bp)
bp$SampleID = rownames(bp)
hp = colSums(htab[,-c(1, ncol(htab), ncol(htab)-1)])/(colSums(btab[,-c(1, ncol(btab), ncol(btab)-1)]) + colSums(htab[,-c(1, ncol(htab), ncol(htab)-1)]) + colSums(ftab[,-c(1, ncol(ftab), ncol(ftab)-1)]))
hp = as.data.frame(hp)
hp$SampleID = rownames(hp)
fp = colSums(ftab[,-c(1, ncol(ftab), ncol(ftab)-1)])/(colSums(btab[,-c(1, ncol(btab), ncol(btab)-1)]) + colSums(htab[,-c(1, ncol(htab), ncol(htab)-1)]) + colSums(ftab[,-c(1, ncol(ftab), ncol(ftab)-1)]))
fp = as.data.frame(fp)
fp$SampleID = rownames(fp)
alltab2 = alltab2 |> dplyr::full_join(bp, by = "SampleID") |> dplyr::full_join(hp, by = "SampleID") |> dplyr::full_join(fp, by = "SampleID")
alltab2 = alltab2 |> dplyr::mutate(fbo = OF /0.5 * bp)
alltab2 = alltab2 |> dplyr::mutate(fho = OF /0.5 * hp)
alltab2 = alltab2 |> dplyr::mutate(ffo = OF /0.5 * fp)
alltab2 = alltab2 |> dplyr::mutate(frb = (BF+(OF /0.5 * bp))/0.6)
alltab2 = alltab2 |> dplyr::mutate(frh = (HF+(OF /0.5 * hp))/0.25)
alltab2 = alltab2 |> dplyr::mutate(frf = (FF+(OF /0.5 * fp))/0.38)
alltab2 = dplyr::mutate(alltab2, U = rowMeans(select(alltab2,13:18))/stats::sd(dplyr::c_across(13:18)))
meta = meta[,c("SampleID", .group)]
mdta
meta
alltab2
alltab2 = merge(meta, alltab2, by = "SampleID")
alltab2
alltab2 = tibble::as_tibble(alltab2)
alltab2
library(easynem)
library(easynem)
bac <- read_nem(tab = easynem_example("nemotu.csv"),
tax = easynem_example("nemtax.csv"),
meta = easynem_example("meta.csv"))
hehe <- calc_nemindex(bac)
#' An S4 class to store energy flow results.
#' @slot result A data frame of energy flow results.
methods::setClass("ef",
slots = list(
result = "data.frame"
))
methods::setMethod("show", "ef", function(object){
cat("This is an ef object\n")
cat("The energy flow results is:\n")
print(object@result)
})
#' calc_ef
#' @description Calculate energy flow between treatments.
#' @param data nemindex type data.
#' @param .group The group variable.
#' @return An ef object.
#' @export
calc_ef <- function(data, .group){
# data = hehe
# .group = "con_crop"
.ef = methods::new("ef")
nemindex = data@result
tab = data@tab
tax = data@tax
meta = data@meta
.group = deparse(substitute(.group))
alltab = merge(tab, tax, by = "OTUID")
otab = alltab |> dplyr::filter(!!rlang::sym("feeding") %in% c(5,8))
otab = otab[,c(names(tab),"cp_value", "GenavgMass")]
otab2 = as.data.frame(colSums(otab[,-c(1, ncol(otab), ncol(otab)-1)]*(0.104*(otab$GenavgMass/otab$cp_value/12)+0.0159*(otab$GenavgMass^0.75))))
names(otab2) = "OF"
otab2$OF = signif(otab2$OF, 2)
otab2$SampleID = rownames(otab2)
otab3 = as.data.frame(colSums(otab[,-c(1, ncol(otab), ncol(otab)-1)]*otab$GenavgMass))
names(otab3) = "OM"
otab3$SampleID = rownames(otab3)
otab2 = merge(otab2,otab3, by = "SampleID")
btab = alltab |> dplyr::filter(!!rlang::sym("feeding") %in% c(3))
btab = btab[,c(names(tab),"cp_value", "GenavgMass")]
btab2 = as.data.frame(colSums(btab[,-c(1, ncol(btab), ncol(btab)-1)]*(0.104*(btab$GenavgMass/btab$cp_value/12)+0.0159*(btab$GenavgMass^0.75))))
names(btab2) = "BF"
btab2$SampleID = rownames(btab2)
btab2$BF = signif(btab2$BF, 2)
btab3 = as.data.frame(colSums(btab[,-c(1, ncol(btab), ncol(btab)-1)]*btab$GenavgMass))
names(btab3) = "BM"
btab3$SampleID = rownames(btab3)
btab2 = merge(btab2,btab3, by = "SampleID")
htab = alltab |> dplyr::filter(!!rlang::sym("feeding") %in% c(1))
htab = htab[,c(names(tab),"cp_value", "GenavgMass")]
htab2 = as.data.frame(colSums(htab[,-c(1, ncol(htab), ncol(htab)-1)]*(0.104*(htab$GenavgMass/htab$cp_value/12)+0.0159*(htab$GenavgMass^0.75))))
names(htab2) = "HF"
htab2$SampleID = rownames(htab2)
htab2$HF = signif(htab2$HF, 2)
htab3 = as.data.frame(colSums(htab[,-c(1, ncol(htab), ncol(htab)-1)]*htab$GenavgMass))
names(htab3) = "HM"
htab3$SampleID = rownames(htab3)
htab2 = merge(htab2,htab3, by = "SampleID")
ftab = alltab |> dplyr::filter(!!rlang::sym("feeding") %in% c(2))
ftab = ftab[,c(names(tab),"cp_value", "GenavgMass")]
ftab2 = as.data.frame(colSums(ftab[,-c(1, ncol(ftab), ncol(ftab)-1)]*(0.104*(ftab$GenavgMass/ftab$cp_value/12)+0.0159*(ftab$GenavgMass^0.75))))
names(ftab2) = "FF"
ftab2$SampleID = rownames(ftab2)
ftab2$FF = signif(ftab2$FF, 2)
ftab3 = as.data.frame(colSums(ftab[,-c(1, ncol(ftab), ncol(ftab)-1)]*ftab$GenavgMass))
names(ftab3) = "FM"
ftab3$SampleID = rownames(ftab3)
ftab2 = merge(ftab2,ftab3, by = "SampleID")
alltab2 = otab2 |> dplyr::full_join(btab2, by = "SampleID") |> dplyr::full_join(htab2, by = "SampleID") |> dplyr::full_join(ftab2, by = "SampleID")
alltab2 = alltab2 |> dplyr::select(!!rlang::sym("SampleID"), dplyr::everything())
bp = colSums(btab[,-c(1, ncol(btab), ncol(btab)-1)])/(colSums(btab[,-c(1, ncol(btab), ncol(btab)-1)]) + colSums(htab[,-c(1, ncol(htab), ncol(htab)-1)]) + colSums(ftab[,-c(1, ncol(ftab), ncol(ftab)-1)]))
bp = as.data.frame(bp)
bp$SampleID = rownames(bp)
hp = colSums(htab[,-c(1, ncol(htab), ncol(htab)-1)])/(colSums(btab[,-c(1, ncol(btab), ncol(btab)-1)]) + colSums(htab[,-c(1, ncol(htab), ncol(htab)-1)]) + colSums(ftab[,-c(1, ncol(ftab), ncol(ftab)-1)]))
hp = as.data.frame(hp)
hp$SampleID = rownames(hp)
fp = colSums(ftab[,-c(1, ncol(ftab), ncol(ftab)-1)])/(colSums(btab[,-c(1, ncol(btab), ncol(btab)-1)]) + colSums(htab[,-c(1, ncol(htab), ncol(htab)-1)]) + colSums(ftab[,-c(1, ncol(ftab), ncol(ftab)-1)]))
fp = as.data.frame(fp)
fp$SampleID = rownames(fp)
alltab2 = alltab2 |> dplyr::full_join(bp, by = "SampleID") |> dplyr::full_join(hp, by = "SampleID") |> dplyr::full_join(fp, by = "SampleID")
alltab2 = alltab2 |> dplyr::mutate(fbo = OF /0.5 * bp)
alltab2 = alltab2 |> dplyr::mutate(fho = OF /0.5 * hp)
alltab2 = alltab2 |> dplyr::mutate(ffo = OF /0.5 * fp)
alltab2 = alltab2 |> dplyr::mutate(frb = (BF+(OF /0.5 * bp))/0.6)
alltab2 = alltab2 |> dplyr::mutate(frh = (HF+(OF /0.5 * hp))/0.25)
alltab2 = alltab2 |> dplyr::mutate(frf = (FF+(OF /0.5 * fp))/0.38)
alltab2 = dplyr::mutate(alltab2, U = rowMeans(select(alltab2,13:18))/stats::sd(dplyr::c_across(13:18)))
meta = meta[,c("SampleID", .group)]
alltab2 = merge(meta, alltab2, by = "SampleID")
alltab2 = tibble::as_tibble(alltab2)
.ef@result = alltab2
return(.ef)
}
hehe <- bac |> calc_nemindex() |> calc_ef()
hehe <- bac |> calc_nemindex() |> calc_ef(con_crop)
hehe
?rowMeans
