#' @export
setMethod("nem_plot", signature("ef"), function(object){
# object = hehe
result = object@result
result = result[,-1]
result2 = result |>
dplyr::group_by(!!rlang::sym(names(result)[1])) |>
dplyr::summarise(dplyr::across(dplyr::everything(), \(x) mean(x, na.rm = TRUE)))
result3 = result |>
dplyr::group_by(!!rlang::sym(names(result)[1])) |>
dplyr::summarise(Use = stats::sd(U)/sqrt(dplyr::n()))
result4 = merge(result2,result3, by = names(result)[1])
result4_U = result4[,c(names(result4)[1], "U", "Use")]
result4_U$U = format(result4_U$U, digits = 2, nsmall = 2)
result4_U$Use = format(result4_U$Use, digits = 2, nsmall = 2)
result4_U = result4_U |> dplyr::mutate(U = paste0("U = ", U, " (±", Use, ")"))
result4_nodes = result4[,c(names(result4)[1], "OM", "BM", "HM", "FM")]
result4_nodes$R = 600
names(result4_nodes) = c(names(result4_nodes)[1], "Omnivores_carnivores", "Bacterivores", "Herbivores", "Fungivores", "Resources")
result4_nodes_long = reshape2::melt(result4_nodes,id.vars = names(result4_nodes)[1], variable.name = "Feeding", value.name = "Fresh_biomass")
result4_edges = result4[,c(names(result4)[1],"fbo", "fho", "ffo", "frb", "frh", "frf")]
result4_edges_long = reshape2::melt(result4_edges,id.vars = names(result4_nodes)[1], variable.name = "group", value.name = "Energy_flow")
result4_edges_long = result4_edges_long |>
dplyr::mutate(group = dplyr::case_when(
group == "fbo" ~ "Bacterivores-Omnivores_carnivores",
group == "fho" ~ "Herbivores-Omnivores_carnivores",
group == "ffo" ~ "Fungivores-Omnivores_carnivores",
group == "frb" ~ "Resources-Bacterivores",
group == "frh" ~ "Resources-Herbivores",
group == "frf" ~ "Resources-Fungivores",
TRUE ~ group  # 保留其他未匹配的值
))
result4_edges_long = result4_edges_long |>
tidyr::separate(group, into = c("from", "to"), sep = "-")
result4_edges_long = result4_edges_long |> dplyr::mutate(from = paste0(!!rlang::sym("from"), !!rlang::sym(names(result4)[1])))
result4_edges_long = result4_edges_long |> dplyr::mutate(to = paste0(!!rlang::sym("to"), !!rlang::sym(names(result4)[1])))
result4_edges_long = result4_edges_long[,-which(names(result4_edges_long) == names(result4_edges_long)[1])]
nodes <- data.frame(
id = c("Resources", "Bacterivores", "Herbivores", "Fungivores", "Omnivores_carnivores"),
Feeding = c("Resources", "Bacterivores", "Herbivores", "Fungivores", "Omnivores_carnivores")
)
nodes = dplyr::bind_rows(replicate(nrow(result4), nodes, simplify = FALSE))
nodes[[names(result4)[1]]] = sort(rep(result4[[1]], times = 5))
nodes = nodes |> dplyr::mutate(id = paste0(!!rlang::sym("id"), !!rlang::sym(names(result4)[1])))
nodes$Feeding = factor(nodes$Feeding, levels = c("Bacterivores", "Fungivores", "Herbivores", "Resources", "Omnivores_carnivores"))
nodes[["U"]] = sort(rep(result4_U[["U"]], times = 5))
nodes = merge(nodes, result4_nodes_long, by = c(names(result4)[1], "Feeding"), all = TRUE)
nodes = dplyr::select(nodes, id, dplyr::everything())
edges <- data.frame(
from = c("Resources", "Resources", "Resources", "Bacterivores", "Herbivores", "Fungivores"),
to = c("Bacterivores", "Herbivores", "Fungivores", "Omnivores_carnivores", "Omnivores_carnivores", "Omnivores_carnivores"),
group = c("Bacterivores", "Herbivores", "Fungivores", "Omnivores_carnivores", "Omnivores_carnivores", "Omnivores_carnivores")
)
edges = dplyr::bind_rows(replicate(nrow(result4), edges, simplify = FALSE))
edges[[names(result4)[1]]] = sort(rep(result4[[1]], times = 6))
edges = edges |> dplyr::mutate(from = paste0(!!rlang::sym("from"), !!rlang::sym(names(result4)[1])))
edges = edges |> dplyr::mutate(to = paste0(!!rlang::sym("to"), !!rlang::sym(names(result4)[1])))
edges[["U"]] = sort(rep(result4_U[["U"]], times = 6))
edges = merge(edges, result4_edges_long, by = c("from", "to"), all = TRUE)
edges$Energy_flow = round(edges$Energy_flow, 2)
graph = tidygraph::tbl_graph(nodes = nodes, edges = edges, directed = TRUE, node_key = "id")
# graph <- igraph::graph_from_data_frame(edges, directed = FALSE, vertices = nodes)
layout_matrix <- matrix(c(
0, 3,
3, 0,
1.5, 1.5,
3, 3,
0, 0
), ncol = 2, byrow = TRUE)
formu = stats::as.formula(paste0("~", names(result4)[1]))
p3 = ggraph::ggraph(graph, layout = layout_matrix) +
ggraph::geom_edge_fan(ggplot2::aes(colour = group, width = Energy_flow, label = Energy_flow), family = NA, show.legend = FALSE) +
ggraph::scale_edge_width(range=c(0.5, 4)) +
ggplot2::geom_text(ggplot2::aes(x = 2, y = 0.5, label = U),family = NA, data = nodes)+
geom_node_point(ggplot2::aes(colour = Feeding, size = Fresh_biomass)) +
geom_node_text(aes(label = Fresh_biomass), repel = TRUE)
ggraph::theme_graph(foreground = 'steelblue', fg_text_colour = 'white', base_family = NA) +
ggplot2::scale_size(range = c(5,13)) +
ggraph::facet_edges(formu, scales = "free")
p3
})
p3 = ggraph::ggraph(graph, layout = layout_matrix) +
ggraph::geom_edge_fan(ggplot2::aes(colour = group, width = Energy_flow, label = Energy_flow), family = NA, show.legend = FALSE) +
ggraph::scale_edge_width(range=c(0.5, 4)) +
ggplot2::geom_text(ggplot2::aes(x = 2, y = 0.5, label = U),family = NA, data = nodes)+
geom_node_point(ggplot2::aes(colour = Feeding, size = Fresh_biomass)) +
geom_node_text(aes(label = Fresh_biomass), repel = TRUE) +
ggraph::theme_graph(foreground = 'steelblue', fg_text_colour = 'white', base_family = NA) +
ggplot2::scale_size(range = c(5,13)) +
ggraph::facet_edges(formu, scales = "free")
p3
View(nodes)
bac <- read_nem(tab = easynem_example("nemotu.csv"),
tax = easynem_example("nemtax.csv"),
meta = easynem_example("meta.csv"))
hehe <- bac |> calc_nemindex() |> calc_ef(con_crop)
hehe
object = hehe
# object = hehe
result = object@result
result = result[,-1]
result2 = result |>
dplyr::group_by(!!rlang::sym(names(result)[1])) |>
dplyr::summarise(dplyr::across(dplyr::everything(), \(x) mean(x, na.rm = TRUE)))
result3 = result |>
dplyr::group_by(!!rlang::sym(names(result)[1])) |>
dplyr::summarise(Use = stats::sd(U)/sqrt(dplyr::n()))
result4 = merge(result2,result3, by = names(result)[1])
result4_U = result4[,c(names(result4)[1], "U", "Use")]
result4_U$U = format(result4_U$U, digits = 2, nsmall = 2)
result4_U$Use = format(result4_U$Use, digits = 2, nsmall = 2)
result4_U = result4_U |> dplyr::mutate(U = paste0("U = ", U, " (±", Use, ")"))
result4_nodes = result4[,c(names(result4)[1], "OM", "BM", "HM", "FM")]
result4_nodes$R = 600
names(result4_nodes) = c(names(result4_nodes)[1], "Omnivores_carnivores", "Bacterivores", "Herbivores", "Fungivores", "Resources")
result4_nodes_long = reshape2::melt(result4_nodes,id.vars = names(result4_nodes)[1], variable.name = "Feeding", value.name = "Fresh_biomass")
result4_edges = result4[,c(names(result4)[1],"fbo", "fho", "ffo", "frb", "frh", "frf")]
result4_edges_long = reshape2::melt(result4_edges,id.vars = names(result4_nodes)[1], variable.name = "group", value.name = "Energy_flow")
result4_edges_long = result4_edges_long |>
dplyr::mutate(group = dplyr::case_when(
group == "fbo" ~ "Bacterivores-Omnivores_carnivores",
group == "fho" ~ "Herbivores-Omnivores_carnivores",
group == "ffo" ~ "Fungivores-Omnivores_carnivores",
group == "frb" ~ "Resources-Bacterivores",
group == "frh" ~ "Resources-Herbivores",
group == "frf" ~ "Resources-Fungivores",
TRUE ~ group  # 保留其他未匹配的值
))
result4_edges_long = result4_edges_long |>
tidyr::separate(group, into = c("from", "to"), sep = "-")
result4_edges_long = result4_edges_long |> dplyr::mutate(from = paste0(!!rlang::sym("from"), !!rlang::sym(names(result4)[1])))
result4_edges_long = result4_edges_long |> dplyr::mutate(to = paste0(!!rlang::sym("to"), !!rlang::sym(names(result4)[1])))
result4_edges_long = result4_edges_long[,-which(names(result4_edges_long) == names(result4_edges_long)[1])]
nodes <- data.frame(
id = c("Resources", "Bacterivores", "Herbivores", "Fungivores", "Omnivores_carnivores"),
Feeding = c("Resources", "Bacterivores", "Herbivores", "Fungivores", "Omnivores_carnivores")
)
nodes = dplyr::bind_rows(replicate(nrow(result4), nodes, simplify = FALSE))
nodes[[names(result4)[1]]] = sort(rep(result4[[1]], times = 5))
nodes = nodes |> dplyr::mutate(id = paste0(!!rlang::sym("id"), !!rlang::sym(names(result4)[1])))
nodes$Feeding = factor(nodes$Feeding, levels = c("Bacterivores", "Fungivores", "Herbivores", "Resources", "Omnivores_carnivores"))
nodes[["U"]] = sort(rep(result4_U[["U"]], times = 5))
nodes = merge(nodes, result4_nodes_long, by = c(names(result4)[1], "Feeding"), all = TRUE)
nodes = dplyr::select(nodes, id, dplyr::everything())
edges <- data.frame(
from = c("Resources", "Resources", "Resources", "Bacterivores", "Herbivores", "Fungivores"),
to = c("Bacterivores", "Herbivores", "Fungivores", "Omnivores_carnivores", "Omnivores_carnivores", "Omnivores_carnivores"),
group = c("Bacterivores", "Herbivores", "Fungivores", "Omnivores_carnivores", "Omnivores_carnivores", "Omnivores_carnivores")
)
edges = dplyr::bind_rows(replicate(nrow(result4), edges, simplify = FALSE))
edges[[names(result4)[1]]] = sort(rep(result4[[1]], times = 6))
edges = edges |> dplyr::mutate(from = paste0(!!rlang::sym("from"), !!rlang::sym(names(result4)[1])))
edges = edges |> dplyr::mutate(to = paste0(!!rlang::sym("to"), !!rlang::sym(names(result4)[1])))
edges[["U"]] = sort(rep(result4_U[["U"]], times = 6))
edges = merge(edges, result4_edges_long, by = c("from", "to"), all = TRUE)
edges$Energy_flow = round(edges$Energy_flow, 2)
graph = tidygraph::tbl_graph(nodes = nodes, edges = edges, directed = TRUE, node_key = "id")
# graph <- igraph::graph_from_data_frame(edges, directed = FALSE, vertices = nodes)
layout_matrix <- matrix(c(
0, 3,
3, 0,
1.5, 1.5,
3, 3,
0, 0
), ncol = 2, byrow = TRUE)
formu = stats::as.formula(paste0("~", names(result4)[1]))
p3 = ggraph::ggraph(graph, layout = layout_matrix) +
ggraph::geom_edge_fan(ggplot2::aes(colour = group, width = Energy_flow, label = Energy_flow), family = NA, show.legend = FALSE) +
ggraph::scale_edge_width(range=c(0.5, 4)) +
ggplot2::geom_text(ggplot2::aes(x = 2, y = 0.5, label = U),family = NA, data = nodes)+
geom_node_point(ggplot2::aes(colour = Feeding, size = Fresh_biomass)) +
geom_node_text(aes(label = Fresh_biomass), repel = TRUE) +
ggraph::theme_graph(foreground = 'steelblue', fg_text_colour = 'white', base_family = NA) +
ggplot2::scale_size(range = c(5,13)) +
ggraph::facet_edges(formu, scales = "free")
p3
p3 = ggraph::ggraph(graph, layout = layout_matrix) +
ggraph::geom_edge_fan(ggplot2::aes(colour = group, width = Energy_flow, label = Energy_flow), family = NA, show.legend = FALSE) +
ggraph::scale_edge_width(range=c(0.5, 4)) +
ggplot2::geom_text(ggplot2::aes(x = 2, y = 0.5, label = U),family = NA, data = nodes)+
geom_node_point(ggplot2::aes(colour = Feeding, size = Fresh_biomass)) +
geom_node_text(aes(label = Fresh_biomass)) +
ggraph::theme_graph(foreground = 'steelblue', fg_text_colour = 'white', base_family = NA) +
ggplot2::scale_size(range = c(5,13)) +
ggraph::facet_edges(formu, scales = "free")
p3
p3 = ggraph::ggraph(graph, layout = layout_matrix) +
ggraph::geom_edge_fan(ggplot2::aes(colour = group, width = Energy_flow, label = Energy_flow), family = NA, show.legend = FALSE) +
ggraph::scale_edge_width(range=c(0.5, 4)) +
ggplot2::geom_text(ggplot2::aes(x = 2, y = 0.5, label = U),family = NA, data = nodes)+
geom_node_point(ggplot2::aes(colour = Feeding, size = Fresh_biomass)) +
geom_node_text(aes(label = Fresh_biomass), repel = TRUE, data = nodes) +
ggraph::theme_graph(foreground = 'steelblue', fg_text_colour = 'white', base_family = NA) +
ggplot2::scale_size(range = c(5,13)) +
ggraph::facet_edges(formu, scales = "free")
p3
p3 = ggraph::ggraph(graph, layout = layout_matrix) +
ggraph::geom_edge_fan(ggplot2::aes(colour = group, width = Energy_flow, label = Energy_flow), family = NA, show.legend = FALSE) +
ggraph::scale_edge_width(range=c(0.5, 4)) +
ggplot2::geom_text(ggplot2::aes(x = 2, y = 0.5, label = U),family = NA, data = nodes)+
geom_node_point(ggplot2::aes(colour = Feeding, size = Fresh_biomass)) +
geom_node_text(aes(label = Fresh_biomass), repel = TRUE) +
ggraph::theme_graph(foreground = 'steelblue', fg_text_colour = 'white', base_family = NA) +
ggplot2::scale_size(range = c(5,13)) +
ggraph::facet_edges(formu, scales = "free")
p3
p3 = ggraph::ggraph(graph, layout = layout_matrix) +
ggraph::geom_edge_fan(ggplot2::aes(colour = group, width = Energy_flow, label = Energy_flow), family = NA, show.legend = FALSE) +
ggraph::scale_edge_width(range=c(0.5, 4)) +
ggplot2::geom_text(ggplot2::aes(x = 2, y = 0.5, label = U),family = NA, data = nodes)+
geom_node_point(ggplot2::aes(colour = Feeding, size = Fresh_biomass)) +
geom_node_text(aes(label = Fresh_biomass), repel = TRUE) +
ggraph::theme_graph(foreground = 'steelblue', fg_text_colour = 'white', base_family = NA) +
ggplot2::scale_size(range = c(5,13)) +
ggraph::facet_wrap(formu, scales = "free")
p3
p3 = ggraph::ggraph(graph, layout = layout_matrix) +
ggraph::geom_edge_fan(ggplot2::aes(colour = group, width = Energy_flow, label = Energy_flow), family = NA, show.legend = FALSE) +
ggraph::scale_edge_width(range=c(0.5, 4)) +
ggplot2::geom_text(ggplot2::aes(x = 2, y = 0.5, label = U),family = NA, data = nodes)+
geom_node_point(ggplot2::aes(colour = Feeding, size = Fresh_biomass)) +
geom_node_text(aes(label = Fresh_biomass), repel = TRUE) +
ggraph::theme_graph(foreground = 'steelblue', fg_text_colour = 'white', base_family = NA) +
ggplot2::scale_size(range = c(5,13)) +
ggplot2::facet_wrap(formu, scales = "free")
p3
# object = hehe
result = object@result
result = result[,-1]
result2 = result |>
dplyr::group_by(!!rlang::sym(names(result)[1])) |>
dplyr::summarise(dplyr::across(dplyr::everything(), \(x) mean(x, na.rm = TRUE)))
result3 = result |>
dplyr::group_by(!!rlang::sym(names(result)[1])) |>
dplyr::summarise(Use = stats::sd(U)/sqrt(dplyr::n()))
result4 = merge(result2,result3, by = names(result)[1])
result4_U = result4[,c(names(result4)[1], "U", "Use")]
result4_U$U = format(result4_U$U, digits = 2, nsmall = 2)
result4_U$Use = format(result4_U$Use, digits = 2, nsmall = 2)
result4_U = result4_U |> dplyr::mutate(U = paste0("U = ", U, " (±", Use, ")"))
result4_nodes = result4[,c(names(result4)[1], "OM", "BM", "HM", "FM")]
result4_nodes$R = 600
names(result4_nodes) = c(names(result4_nodes)[1], "Omnivores_carnivores", "Bacterivores", "Herbivores", "Fungivores", "Resources")
result4_nodes_long = reshape2::melt(result4_nodes,id.vars = names(result4_nodes)[1], variable.name = "Feeding", value.name = "Fresh_biomass")
result4_edges = result4[,c(names(result4)[1],"fbo", "fho", "ffo", "frb", "frh", "frf")]
result4_edges_long = reshape2::melt(result4_edges,id.vars = names(result4_nodes)[1], variable.name = "group", value.name = "Energy_flow")
result4_edges_long = result4_edges_long |>
dplyr::mutate(group = dplyr::case_when(
group == "fbo" ~ "Bacterivores-Omnivores_carnivores",
group == "fho" ~ "Herbivores-Omnivores_carnivores",
group == "ffo" ~ "Fungivores-Omnivores_carnivores",
group == "frb" ~ "Resources-Bacterivores",
group == "frh" ~ "Resources-Herbivores",
group == "frf" ~ "Resources-Fungivores",
TRUE ~ group  # 保留其他未匹配的值
))
result4_edges_long = result4_edges_long |>
tidyr::separate(group, into = c("from", "to"), sep = "-")
result4_edges_long = result4_edges_long |> dplyr::mutate(from = paste0(!!rlang::sym("from"), !!rlang::sym(names(result4)[1])))
result4_edges_long = result4_edges_long |> dplyr::mutate(to = paste0(!!rlang::sym("to"), !!rlang::sym(names(result4)[1])))
result4_edges_long = result4_edges_long[,-which(names(result4_edges_long) == names(result4_edges_long)[1])]
nodes <- data.frame(
id = c("Resources", "Bacterivores", "Herbivores", "Fungivores", "Omnivores_carnivores"),
Feeding = c("Resources", "Bacterivores", "Herbivores", "Fungivores", "Omnivores_carnivores")
)
nodes = dplyr::bind_rows(replicate(nrow(result4), nodes, simplify = FALSE))
nodes[[names(result4)[1]]] = sort(rep(result4[[1]], times = 5))
nodes = nodes |> dplyr::mutate(id = paste0(!!rlang::sym("id"), !!rlang::sym(names(result4)[1])))
nodes$Feeding = factor(nodes$Feeding, levels = c("Bacterivores", "Fungivores", "Herbivores", "Resources", "Omnivores_carnivores"))
nodes[["U"]] = sort(rep(result4_U[["U"]], times = 5))
nodes = merge(nodes, result4_nodes_long, by = c(names(result4)[1], "Feeding"), all = TRUE)
nodes = dplyr::select(nodes, id, dplyr::everything())
nodes$Fresh_biomass = round(nodes$Fresh_biomass,1)
edges <- data.frame(
from = c("Resources", "Resources", "Resources", "Bacterivores", "Herbivores", "Fungivores"),
to = c("Bacterivores", "Herbivores", "Fungivores", "Omnivores_carnivores", "Omnivores_carnivores", "Omnivores_carnivores"),
group = c("Bacterivores", "Herbivores", "Fungivores", "Omnivores_carnivores", "Omnivores_carnivores", "Omnivores_carnivores")
)
edges = dplyr::bind_rows(replicate(nrow(result4), edges, simplify = FALSE))
edges[[names(result4)[1]]] = sort(rep(result4[[1]], times = 6))
edges = edges |> dplyr::mutate(from = paste0(!!rlang::sym("from"), !!rlang::sym(names(result4)[1])))
edges = edges |> dplyr::mutate(to = paste0(!!rlang::sym("to"), !!rlang::sym(names(result4)[1])))
edges[["U"]] = sort(rep(result4_U[["U"]], times = 6))
edges = merge(edges, result4_edges_long, by = c("from", "to"), all = TRUE)
edges$Energy_flow = round(edges$Energy_flow, 2)
graph = tidygraph::tbl_graph(nodes = nodes, edges = edges, directed = TRUE, node_key = "id")
# graph <- igraph::graph_from_data_frame(edges, directed = FALSE, vertices = nodes)
layout_matrix <- matrix(c(
0, 3,
3, 0,
1.5, 1.5,
3, 3,
0, 0
), ncol = 2, byrow = TRUE)
formu = stats::as.formula(paste0("~", names(result4)[1]))
p3 = ggraph::ggraph(graph, layout = layout_matrix) +
ggraph::geom_edge_fan(ggplot2::aes(colour = group, width = Energy_flow, label = Energy_flow), family = NA, show.legend = FALSE) +
ggraph::scale_edge_width(range=c(0.5, 4)) +
ggplot2::geom_text(ggplot2::aes(x = 2, y = 0.5, label = U),family = NA, data = nodes)+
geom_node_point(ggplot2::aes(colour = Feeding, size = Fresh_biomass)) +
geom_node_text(aes(label = Fresh_biomass), repel = TRUE) +
ggraph::theme_graph(foreground = 'steelblue', fg_text_colour = 'white', base_family = NA) +
ggplot2::scale_size(range = c(5,13)) +
ggplot2::facet_wrap(formu, scales = "free")
p3
?round
View(nodes)
nodes$label = nodes$Fresh_biomass
nodes = nodes |> dplyr::mutate(label = ifelse(Feeding == "Resources", "R"))
nodes = nodes |> dplyr::mutate(label = ifelse(Feeding == "Resources", "R", name))
nodes = nodes |> dplyr::mutate(label = ifelse(Feeding == "Resources", "R", label))
View(nodes)
edges <- data.frame(
from = c("Resources", "Resources", "Resources", "Bacterivores", "Herbivores", "Fungivores"),
to = c("Bacterivores", "Herbivores", "Fungivores", "Omnivores_carnivores", "Omnivores_carnivores", "Omnivores_carnivores"),
group = c("Bacterivores", "Herbivores", "Fungivores", "Omnivores_carnivores", "Omnivores_carnivores", "Omnivores_carnivores")
)
edges = dplyr::bind_rows(replicate(nrow(result4), edges, simplify = FALSE))
edges[[names(result4)[1]]] = sort(rep(result4[[1]], times = 6))
edges = edges |> dplyr::mutate(from = paste0(!!rlang::sym("from"), !!rlang::sym(names(result4)[1])))
edges = edges |> dplyr::mutate(to = paste0(!!rlang::sym("to"), !!rlang::sym(names(result4)[1])))
edges[["U"]] = sort(rep(result4_U[["U"]], times = 6))
edges = merge(edges, result4_edges_long, by = c("from", "to"), all = TRUE)
edges$Energy_flow = round(edges$Energy_flow, 2)
graph = tidygraph::tbl_graph(nodes = nodes, edges = edges, directed = TRUE, node_key = "id")
# graph <- igraph::graph_from_data_frame(edges, directed = FALSE, vertices = nodes)
layout_matrix <- matrix(c(
0, 3,
3, 0,
1.5, 1.5,
3, 3,
0, 0
), ncol = 2, byrow = TRUE)
formu = stats::as.formula(paste0("~", names(result4)[1]))
p3 = ggraph::ggraph(graph, layout = layout_matrix) +
ggraph::geom_edge_fan(ggplot2::aes(colour = group, width = Energy_flow, label = Energy_flow), family = NA, show.legend = FALSE) +
ggraph::scale_edge_width(range=c(0.5, 4)) +
ggplot2::geom_text(ggplot2::aes(x = 2, y = 0.5, label = U),family = NA, data = nodes)+
geom_node_point(ggplot2::aes(colour = Feeding, size = Fresh_biomass)) +
geom_node_text(aes(label = label), repel = TRUE) +
ggraph::theme_graph(foreground = 'steelblue', fg_text_colour = 'white', base_family = NA) +
ggplot2::scale_size(range = c(5,13)) +
ggplot2::facet_wrap(formu, scales = "free")
p3
View(nodes)
#' @description For visualization of nematode community data.
#' @param object ef or other types data.
#' @return An ggplot object.
#' @rdname ef
#' @name ef
#' @aliases nem_plot,ef-method
#' @import ggplot2
#' @import igraph
#' @export
setMethod("nem_plot", signature("ef"), function(object){
# object = hehe
result = object@result
result = result[,-1]
result2 = result |>
dplyr::group_by(!!rlang::sym(names(result)[1])) |>
dplyr::summarise(dplyr::across(dplyr::everything(), \(x) mean(x, na.rm = TRUE)))
result3 = result |>
dplyr::group_by(!!rlang::sym(names(result)[1])) |>
dplyr::summarise(Use = stats::sd(U)/sqrt(dplyr::n()))
result4 = merge(result2,result3, by = names(result)[1])
result4_U = result4[,c(names(result4)[1], "U", "Use")]
result4_U$U = format(result4_U$U, digits = 2, nsmall = 2)
result4_U$Use = format(result4_U$Use, digits = 2, nsmall = 2)
result4_U = result4_U |> dplyr::mutate(U = paste0("U = ", U, " (±", Use, ")"))
result4_nodes = result4[,c(names(result4)[1], "OM", "BM", "HM", "FM")]
result4_nodes$R = 600
names(result4_nodes) = c(names(result4_nodes)[1], "Omnivores_carnivores", "Bacterivores", "Herbivores", "Fungivores", "Resources")
result4_nodes_long = reshape2::melt(result4_nodes,id.vars = names(result4_nodes)[1], variable.name = "Feeding", value.name = "Fresh_biomass")
result4_edges = result4[,c(names(result4)[1],"fbo", "fho", "ffo", "frb", "frh", "frf")]
result4_edges_long = reshape2::melt(result4_edges,id.vars = names(result4_nodes)[1], variable.name = "group", value.name = "Energy_flow")
result4_edges_long = result4_edges_long |>
dplyr::mutate(group = dplyr::case_when(
group == "fbo" ~ "Bacterivores-Omnivores_carnivores",
group == "fho" ~ "Herbivores-Omnivores_carnivores",
group == "ffo" ~ "Fungivores-Omnivores_carnivores",
group == "frb" ~ "Resources-Bacterivores",
group == "frh" ~ "Resources-Herbivores",
group == "frf" ~ "Resources-Fungivores",
TRUE ~ group  # 保留其他未匹配的值
))
result4_edges_long = result4_edges_long |>
tidyr::separate(group, into = c("from", "to"), sep = "-")
result4_edges_long = result4_edges_long |> dplyr::mutate(from = paste0(!!rlang::sym("from"), !!rlang::sym(names(result4)[1])))
result4_edges_long = result4_edges_long |> dplyr::mutate(to = paste0(!!rlang::sym("to"), !!rlang::sym(names(result4)[1])))
result4_edges_long = result4_edges_long[,-which(names(result4_edges_long) == names(result4_edges_long)[1])]
nodes <- data.frame(
id = c("Resources", "Bacterivores", "Herbivores", "Fungivores", "Omnivores_carnivores"),
Feeding = c("Resources", "Bacterivores", "Herbivores", "Fungivores", "Omnivores_carnivores")
)
nodes = dplyr::bind_rows(replicate(nrow(result4), nodes, simplify = FALSE))
nodes[[names(result4)[1]]] = sort(rep(result4[[1]], times = 5))
nodes = nodes |> dplyr::mutate(id = paste0(!!rlang::sym("id"), !!rlang::sym(names(result4)[1])))
nodes$Feeding = factor(nodes$Feeding, levels = c("Bacterivores", "Fungivores", "Herbivores", "Resources", "Omnivores_carnivores"))
nodes[["U"]] = sort(rep(result4_U[["U"]], times = 5))
nodes = merge(nodes, result4_nodes_long, by = c(names(result4)[1], "Feeding"), all = TRUE)
nodes = dplyr::select(nodes, id, dplyr::everything())
nodes$Fresh_biomass = round(nodes$Fresh_biomass,2)
nodes$label = nodes$Fresh_biomass
nodes = nodes |> dplyr::mutate(label = ifelse(Feeding == "Resources", "R", label))
edges <- data.frame(
from = c("Resources", "Resources", "Resources", "Bacterivores", "Herbivores", "Fungivores"),
to = c("Bacterivores", "Herbivores", "Fungivores", "Omnivores_carnivores", "Omnivores_carnivores", "Omnivores_carnivores"),
group = c("Bacterivores", "Herbivores", "Fungivores", "Omnivores_carnivores", "Omnivores_carnivores", "Omnivores_carnivores")
)
edges = dplyr::bind_rows(replicate(nrow(result4), edges, simplify = FALSE))
edges[[names(result4)[1]]] = sort(rep(result4[[1]], times = 6))
edges = edges |> dplyr::mutate(from = paste0(!!rlang::sym("from"), !!rlang::sym(names(result4)[1])))
edges = edges |> dplyr::mutate(to = paste0(!!rlang::sym("to"), !!rlang::sym(names(result4)[1])))
edges[["U"]] = sort(rep(result4_U[["U"]], times = 6))
edges = merge(edges, result4_edges_long, by = c("from", "to"), all = TRUE)
edges$Energy_flow = round(edges$Energy_flow, 2)
graph = tidygraph::tbl_graph(nodes = nodes, edges = edges, directed = TRUE, node_key = "id")
# graph <- igraph::graph_from_data_frame(edges, directed = FALSE, vertices = nodes)
layout_matrix <- matrix(c(
0, 3,
3, 0,
1.5, 1.5,
3, 3,
0, 0
), ncol = 2, byrow = TRUE)
formu = stats::as.formula(paste0("~", names(result4)[1]))
p3 = ggraph::ggraph(graph, layout = layout_matrix) +
ggraph::geom_edge_fan(ggplot2::aes(colour = group, width = Energy_flow, label = Energy_flow), family = NA, show.legend = FALSE) +
ggraph::scale_edge_width(range=c(0.5, 4)) +
ggplot2::geom_text(ggplot2::aes(x = 2, y = 0.5, label = U),family = NA, data = nodes)+
geom_node_point(ggplot2::aes(colour = Feeding, size = Fresh_biomass)) +
geom_node_text(aes(label = label), repel = TRUE) +
ggraph::theme_graph(foreground = 'steelblue', fg_text_colour = 'white', base_family = NA) +
ggplot2::scale_size(range = c(5,13)) +
ggplot2::facet_wrap(formu, scales = "free")
p3
})
devtools::install_github("whkygl/easynem")
library(easynem)
bac <- read_nem(tab = easynem_example("nemotu.csv"),
tax = easynem_example("nemtax.csv"),
meta = easynem_example("meta.csv"))
hehe <- bac |> calc_nemindex() |> calc_ef(con_crop)
hehe
hehe2 <- nem_plot(hehe)
nodes$Fresh_biomass
?geom_edge_label
library(ggraph)
?geom_edge_label
?ggraph::geom_edge_fan
?geom_edge_text
??geom_edge_text
p3 = ggraph::ggraph(graph, layout = layout_matrix) +
ggraph::geom_edge_fan(ggplot2::aes(colour = group, width = Energy_flow, label = Energy_flow, label_colour = group), family = NA, show.legend = FALSE) +
ggraph::scale_edge_width(range=c(0.5, 4)) +
ggplot2::geom_text(ggplot2::aes(x = 2, y = 0.5, label = U),family = NA, data = nodes)+
geom_node_point(ggplot2::aes(colour = Feeding, size = Fresh_biomass)) +
geom_node_text(aes(label = label), repel = TRUE) +
ggraph::theme_graph(foreground = 'steelblue', fg_text_colour = 'white', base_family = NA) +
ggplot2::scale_size(range = c(5,13)) +
ggplot2::facet_wrap(formu, scales = "free")
p3 = ggraph::ggraph(graph, layout = layout_matrix) +
ggraph::geom_edge_fan(ggplot2::aes(colour = group, width = Energy_flow, label = Energy_flow, label_colour = NA), family = NA, show.legend = FALSE) +
ggraph::scale_edge_width(range=c(0.5, 4)) +
ggplot2::geom_text(ggplot2::aes(x = 2, y = 0.5, label = U),family = NA, data = nodes)+
geom_node_point(ggplot2::aes(colour = Feeding, size = Fresh_biomass)) +
geom_node_text(aes(label = label), repel = TRUE) +
ggraph::theme_graph(foreground = 'steelblue', fg_text_colour = 'white', base_family = NA) +
ggplot2::scale_size(range = c(5,13)) +
ggplot2::facet_wrap(formu, scales = "free")
p3 = ggraph::ggraph(graph, layout = layout_matrix) +
ggraph::geom_edge_fan(ggplot2::aes(colour = group, width = Energy_flow, label = Energy_flow), label_colour = NA, family = NA, show.legend = FALSE) +
ggraph::scale_edge_width(range=c(0.5, 4)) +
ggplot2::geom_text(ggplot2::aes(x = 2, y = 0.5, label = U),family = NA, data = nodes)+
geom_node_point(ggplot2::aes(colour = Feeding, size = Fresh_biomass)) +
geom_node_text(aes(label = label), repel = TRUE) +
ggraph::theme_graph(foreground = 'steelblue', fg_text_colour = 'white', base_family = NA) +
ggplot2::scale_size(range = c(5,13)) +
ggplot2::facet_wrap(formu, scales = "free")
p3
p3 = ggraph::ggraph(graph, layout = layout_matrix) +
ggraph::geom_edge_fan(ggplot2::aes(colour = group, width = Energy_flow, label = Energy_flow), label_colour = NA, label_alpha = NA, family = NA, show.legend = FALSE) +
ggraph::scale_edge_width(range=c(0.5, 4)) +
ggplot2::geom_text(ggplot2::aes(x = 2, y = 0.5, label = U),family = NA, data = nodes)+
geom_node_point(ggplot2::aes(colour = Feeding, size = Fresh_biomass)) +
geom_node_text(aes(label = label), repel = TRUE) +
ggraph::theme_graph(foreground = 'steelblue', fg_text_colour = 'white', base_family = NA) +
ggplot2::scale_size(range = c(5,13)) +
ggplot2::facet_wrap(formu, scales = "free")
p3
p3 = ggraph::ggraph(graph, layout = layout_matrix) +
ggraph::geom_edge_fan(ggplot2::aes(colour = group, width = Energy_flow, label = Energy_flow), label_colour = NA, family = NA, show.legend = FALSE) +
ggraph::scale_edge_width(range=c(0.5, 4)) +
ggplot2::geom_text(ggplot2::aes(x = 2, y = 0.5, label = U),family = NA, data = nodes)+
geom_node_point(ggplot2::aes(colour = Feeding, size = Fresh_biomass)) +
geom_node_text(aes(label = label), repel = TRUE) +
ggraph::theme_graph(foreground = 'steelblue', fg_text_colour = 'white', base_family = NA) +
ggplot2::scale_size(range = c(5,13)) +
ggplot2::facet_wrap(formu, scales = "free")
p3
?geom_custom_edge_text
p3 = ggraph::ggraph(graph, layout = layout_matrix) +
ggraph::geom_edge_fan(ggplot2::aes(colour = group, width = Energy_flow, label = Energy_flow), family = NA, show.legend = FALSE) +
ggraph::scale_edge_width(range=c(0.5, 4)) +
ggplot2::geom_text(ggplot2::aes(x = 2, y = 0.5, label = U),family = NA, data = nodes)+
geom_node_point(ggplot2::aes(colour = Feeding, size = Fresh_biomass)) +
geom_node_text(aes(label = label), repel = TRUE) +
ggraph::theme_graph(foreground = 'steelblue', fg_text_colour = 'white', base_family = NA) +
ggplot2::scale_size(range = c(5,13)) +
ggplot2::facet_wrap(formu, scales = "free")
p3
