results
results <- meta |>
dplyr::group_by(!!rlang::sym(.group2)) |>
tidyr::nest() |>
dplyr::mutate(
lsd_result = purrr::map(data, ~ {
lsd_test <- agricolae::LSD.test(stats::aov(pH ~ con_crop, data = .x, ...), .group1, ...)
})
)
library(agricolae)
library(dplyr)
# 示例数据框
meta <- data.frame(
season = rep(c("spring", "summer", "fall", "winter"), each = 10),
con_crop = rep(c("crop1", "crop2"), each = 5, times = 4),
pH = runif(40, 5.5, 7.5)
)
# 定义一个函数来进行LSD检验并提取结果
perform_lsd_test <- function(data) {
lsd_test <- LSD.test(aov(pH ~ con_crop, data = data), "con_crop")
result <- data.frame(
con_crop = rownames(lsd_test$groups),
pH = lsd_test$means[, "pH"],
group = lsd_test$groups[, "groups"]
)
return(result)
}
# 按season分组进行LSD检验并合并结果
results_list <- lapply(split(meta, meta$season), perform_lsd_test)
# 将结果合并为一个数据框
results <- do.call(rbind, Map(cbind, season = names(results_list), results_list))
# 重置行名
rownames(results) <- NULL
# 查看结果
print(results)
# 定义一个函数来进行LSD检验并提取结果
perform_lsd_test <- function(data) {
lsd_test <- LSD.test(aov(pH ~ con_crop, data = data), "con_crop")
)
# 定义一个函数来进行LSD检验并提取结果
perform_lsd_test <- function(data) {
lsd_test <- LSD.test(aov(pH ~ con_crop, data = data), "con_crop")
return(lsd_test)
}
# 按season分组进行LSD检验并合并结果
results_list <- lapply(split(meta, meta$season), perform_lsd_test)
# 将结果合并为一个数据框
results <- do.call(rbind, Map(cbind, season = names(results_list), results_list))
# 重置行名
rownames(results) <- NULL
# 查看结果
print(results)
View(results)
View(results[[2]][[1]])
results[[2]][[1]]
library(agricolae)
library(dplyr)
# 示例数据框
meta <- data.frame(
season = rep(c("spring", "summer", "fall", "winter"), each = 10),
con_crop = rep(c("crop1", "crop2"), each = 5, times = 4),
pH = runif(40, 5.5, 7.5)
)
# 定义一个函数来进行LSD检验并提取结果
perform_lsd_test <- function(data) {
lsd_test <- LSD.test(aov(pH ~ con_crop, data = data), "con_crop")
result <- data.frame(
con_crop = rownames(lsd_test$groups),
pH = lsd_test$means[, "pH"],
group = lsd_test$groups[, "groups"],
comparison = rownames(lsd_test$comparison),
diff = lsd_test$comparison[, "difference"],
p_value = lsd_test$comparison[, "pvalue"]
)
return(result)
}
# 按season分组进行LSD检验并合并结果
results_list <- lapply(split(meta, meta$season), perform_lsd_test)
library(agricolae)
library(dplyr)
# 示例数据框
meta <- data.frame(
season = rep(c("spring", "summer", "fall", "winter"), each = 10),
con_crop = rep(c("crop1", "crop2"), each = 5, times = 4),
pH = runif(40, 5.5, 7.5)
)
# 定义一个函数来进行LSD检验并提取结果
perform_lsd_test <- function(data) {
lsd_test <- LSD.test(aov(pH ~ con_crop, data = data), "con_crop")
# 提取均值和显著性标记
means_df <- data.frame(
con_crop = rownames(lsd_test$means),
pH = lsd_test$means[, "pH"],
group = lsd_test$groups[, "groups"]
)
# 提取两两比较结果
comparison_df <- as.data.frame(lsd_test$comparison)
comparison_df$comparison <- rownames(comparison_df)
return(list(means = means_df, comparisons = comparison_df))
}
# 按season分组进行LSD检验并合并结果
results_list <- lapply(split(meta, meta$season), perform_lsd_test)
# 将均值和显著性标记结果合并
means_results <- do.call(rbind, Map(cbind, season = names(results_list), lapply(results_list, function(x) x$means)))
# 将两两比较结果合并
comparisons_results <- do.call(rbind, Map(cbind, season = names(results_list), lapply(results_list, function(x) x$comparisons)))
means_results
# 示例数据框
meta <- data.frame(
season = rep(c("spring", "summer", "fall", "winter"), each = 10),
con_crop = rep(c("crop1", "crop2"), each = 5, times = 4),
pH = runif(40, 5.5, 7.5)
)
# 定义一个函数来进行LSD检验并提取结果
perform_lsd_test <- function(data) {
lsd_test <- LSD.test(aov(pH ~ con_crop, data = data), "con_crop")
result <- data.frame(
con_crop = rownames(lsd_test$groups),
pH = lsd_test$means[, "pH"],
group = lsd_test$groups[, "groups"],
comparison = rownames(lsd_test$comparison),
diff = lsd_test$comparison[, "difference"],
p_value = lsd_test$comparison[, "pvalue"]
)
return(result)
}
# 按season分组进行LSD检验并合并结果
results_list <- lapply(split(meta, meta$season), perform_lsd_test)
# 示例数据框
meta <- data.frame(
season = rep(c("spring", "summer", "fall", "winter"), each = 10),
con_crop = rep(c("crop1", "crop2"), each = 5, times = 4),
pH = runif(40, 5.5, 7.5)
)
# 定义一个函数来进行LSD检验并提取结果
perform_lsd_test <- function(data) {
lsd_test <- LSD.test(aov(pH ~ con_crop, data = data), "con_crop")
result <- data.frame(
con_crop = rownames(lsd_test$groups),
pH = lsd_test$means[, "pH"],
group = lsd_test$groups[, "groups"]
)
return(result)
}
# 按season分组进行LSD检验并合并结果
results_list <- lapply(split(meta, meta$season), perform_lsd_test)
results_list
lsd_test <- LSD.test(aov(pH ~ con_crop, data = meta), "con_crop")
lsd_test
?aov
# devtools::install_github("whkygl/easynem")
library(easynem)
bac <- read_nem(tab = easynem_example("bacotu.csv"),
tax = easynem_example("bactax.csv"),
meta = easynem_example("meta.csv"))
data = bac
# data = bac
.group1 = "con_crop"
.group2 = "season"
y = "pH"
.compare2 = methods::new("compare2")
meta = as.data.frame(data@meta)
meta = meta[,c(names(meta)[1], .group1, .group2, y)]
.compare2@meta = meta
.compare2@temp = c("LSD2")
meta
formu = paste0(y, "~", .group1)
formu
formu = as.formula(formu)
?as.formula
?paste0
hehe = agricolae::LSD.test(stats::aov(pH~con_crop, data = meta), "con_crop")
hehe
?merge
?lapply
?split
?do.call
?rbind
LSD2 <- function(data, .group1, .group2, y, method2 = "none", ...){
# data = bac
.group1 = "con_crop"
.group2 = "season"
y = "pH"
.compare2 = methods::new("compare2")
meta = as.data.frame(data@meta)
meta = meta[,c(names(meta)[1], .group1, .group2, y)]
.compare2@meta = meta
.compare2@temp = c("LSD2")
perform_lsd_test <- function(data2, ...) {
formu = paste0(y, "~", .group1)
formu = stats::as.formula(formu)
lsd_test = agricolae::LSD.test(stats::aov(formu, data = data2, ...), .group1, ...)
result1 = lsd_test$means
result1$group = rownames(result1)
result2 = lsd_test$groups
result2$group = rownames(result2)
result = merge(result1, result2, by = "group")
return(result)
}
results_list = lapply(split(meta, meta[[.group2]]), perform_lsd_test)
results <- do.call(rbind, Map(cbind, season = names(results_list), results_list))
.compare2@result = results
return(.compare2)
}
hehe <- calc_compare2(bac, con_crop, season, pH, method = LSD2)
hehe
LSD2 <- function(data, .group1, .group2, y, method2 = "none", ...){
# data = bac
.group1 = "con_crop"
.group2 = "season"
y = "pH"
.compare2 = methods::new("compare2")
meta = as.data.frame(data@meta)
meta = meta[,c(names(meta)[1], .group1, .group2, y)]
.compare2@meta = meta
.compare2@temp = c("LSD2")
perform_lsd_test <- function(data2, ...) {
formu = paste0(y, "~", .group1)
formu = stats::as.formula(formu)
lsd_test = agricolae::LSD.test(stats::aov(formu, data = data2, ...), .group1, ...)
result1 = lsd_test$means
result1 = result1[,-1]
result1$group = rownames(result1)
result2 = lsd_test$groups
result2$group = rownames(result2)
result = merge(result1, result2, by = "group")
return(result)
}
results_list = lapply(split(meta, meta[[.group2]]), perform_lsd_test)
results <- do.call(rbind, Map(cbind, season = names(results_list), results_list))
.compare2@result = results
return(.compare2)
}
hehe <- calc_compare2(bac, con_crop, season, pH, method = LSD2)
hehe
LSD2 <- function(data, .group1, .group2, y, method2 = "none", ...){
# data = bac
.group1 = "con_crop"
.group2 = "season"
y = "pH"
.compare2 = methods::new("compare2")
meta = as.data.frame(data@meta)
meta = meta[,c(names(meta)[1], .group1, .group2, y)]
.compare2@meta = meta
.compare2@temp = c("LSD2")
perform_lsd_test <- function(data2, ...) {
formu = paste0(y, "~", .group1)
formu = stats::as.formula(formu)
lsd_test = agricolae::LSD.test(stats::aov(formu, data = data2, ...), .group1, ...)
result1 = lsd_test$means
result1 = result1[,-1]
result1$group = rownames(result1)
result2 = lsd_test$groups
result2$group = rownames(result2)
result = merge(result1, result2, by = "group")
return(result)
}
results_list = lapply(split(meta, meta[[.group2]]), perform_lsd_test)
results <- do.call(rbind, Map(cbind, names(results_list), results_list))
.compare2@result = results
return(.compare2)
}
hehe <- calc_compare2(bac, con_crop, season, pH, method = LSD2)
LSD2 <- function(data, .group1, .group2, y, method2 = "none", ...){
# data = bac
.group1 = "con_crop"
.group2 = "season"
y = "pH"
.compare2 = methods::new("compare2")
meta = as.data.frame(data@meta)
meta = meta[,c(names(meta)[1], .group1, .group2, y)]
.compare2@meta = meta
.compare2@temp = c("LSD2")
perform_lsd_test <- function(data2, ...) {
formu = paste0(y, "~", .group1)
formu = stats::as.formula(formu)
lsd_test = agricolae::LSD.test(stats::aov(formu, data = data2, ...), .group1, ...)
result1 = lsd_test$means
result1 = result1[,-1]
result1$group = rownames(result1)
result2 = lsd_test$groups
result2$group = rownames(result2)
result = merge(result1, result2, by = "group")
return(result)
}
results_list = lapply(split(meta, meta[[.group2]]), perform_lsd_test)
results <- do.call(rbind, Map(cbind, group2 = names(results_list), results_list))
.compare2@result = results
return(.compare2)
}
hehe <- calc_compare2(bac, con_crop, season, pH, method = LSD2)
hehe
LSD2 <- function(data, .group1, .group2, y, method2 = "none", ...){
# data = bac
.group1 = "con_crop"
.group2 = "season"
y = "pH"
.compare2 = methods::new("compare2")
meta = as.data.frame(data@meta)
meta = meta[,c(names(meta)[1], .group1, .group2, y)]
.compare2@meta = meta
.compare2@temp = c("LSD2")
perform_lsd_test <- function(data2, ...) {
formu = paste0(y, "~", .group1)
formu = stats::as.formula(formu)
lsd_test = agricolae::LSD.test(stats::aov(formu, data = data2, ...), .group1, ...)
result1 = lsd_test$means
result1 = result1[,-1]
result1$group = rownames(result1)
result2 = lsd_test$groups
result2$group = rownames(result2)
result = merge(result1, result2, by = "group")
return(result)
}
results_list = lapply(split(meta, meta[[.group2]]), perform_lsd_test)
results <- do.call(rbind, Map(cbind, group2 = names(results_list), results_list))
names(results)[names(results) == "group2"] = .group2
.compare2@result = results
return(.compare2)
}
hehe <- calc_compare2(bac, con_crop, season, pH, method = LSD2)
hehe
LSD2 <- function(data, .group1, .group2, y, method2 = "none", ...){
# data = bac
.group1 = "con_crop"
.group2 = "season"
y = "pH"
.compare2 = methods::new("compare2")
meta = as.data.frame(data@meta)
meta = meta[,c(names(meta)[1], .group1, .group2, y)]
.compare2@meta = meta
.compare2@temp = c("LSD2")
perform_lsd_test <- function(data2, ...) {
formu = paste0(y, "~", .group1)
formu = stats::as.formula(formu)
lsd_test = agricolae::LSD.test(stats::aov(formu, data = data2, ...), .group1, ...)
result1 = lsd_test$means
result1 = result1[,-1]
result1$group = rownames(result1)
result2 = lsd_test$groups
result2$group = rownames(result2)
result = merge(result1, result2, by = "group")
return(result)
}
results_list = lapply(split(meta, meta[[.group2]]), perform_lsd_test)
results <- do.call(rbind, Map(cbind, group2 = names(results_list), results_list))
names(results)[names(results) == "group2"] = .group2
names(results)[names(results) == "groups"] = label
.compare2@result = results
return(.compare2)
}
hehe <- calc_compare2(bac, con_crop, season, pH, method = LSD2)
LSD2 <- function(data, .group1, .group2, y, method2 = "none", ...){
# data = bac
.group1 = "con_crop"
.group2 = "season"
y = "pH"
.compare2 = methods::new("compare2")
meta = as.data.frame(data@meta)
meta = meta[,c(names(meta)[1], .group1, .group2, y)]
.compare2@meta = meta
.compare2@temp = c("LSD2")
perform_lsd_test <- function(data2, ...) {
formu = paste0(y, "~", .group1)
formu = stats::as.formula(formu)
lsd_test = agricolae::LSD.test(stats::aov(formu, data = data2, ...), .group1, ...)
result1 = lsd_test$means
result1 = result1[,-1]
result1$group = rownames(result1)
result2 = lsd_test$groups
result2$group = rownames(result2)
result = merge(result1, result2, by = "group")
return(result)
}
results_list = lapply(split(meta, meta[[.group2]]), perform_lsd_test)
results <- do.call(rbind, Map(cbind, group2 = names(results_list), results_list))
names(results)[names(results) == "group2"] = .group2
names(results)[names(results) == "groups"] = "label"
.compare2@result = results
return(.compare2)
}
hehe <- calc_compare2(bac, con_crop, season, pH, method = LSD2)
hehe
LSD2 <- function(data, .group1, .group2, y, method2 = "none", ...){
# data = bac
.group1 = "con_crop"
.group2 = "season"
y = "pH"
.compare2 = methods::new("compare2")
meta = as.data.frame(data@meta)
meta = meta[,c(names(meta)[1], .group1, .group2, y)]
.compare2@meta = meta
.compare2@temp = c("LSD2")
perform_lsd_test <- function(data2, ...) {
formu = paste0(y, "~", .group1)
formu = stats::as.formula(formu)
lsd_test = agricolae::LSD.test(stats::aov(formu, data = data2, ...), .group1, ...)
result1 = lsd_test$means
result1 = result1[,-1]
result1$group = rownames(result1)
result2 = lsd_test$groups
result2$group = rownames(result2)
result = merge(result1, result2, by = "group")
return(result)
}
results_list = lapply(split(meta, meta[[.group2]]), perform_lsd_test)
results <- do.call(rbind, Map(cbind, group2 = names(results_list), results_list))
names(results)[names(results) == "group2"] = .group2
names(results)[names(results) == "groups"] = "label"
names(results)[names(results) == "group"] = .group1
.compare2@result = results
return(.compare2)
}
hehe <- calc_compare2(bac, con_crop, season, pH, method = LSD2)
hehe
View(hehe)
?do.call
?Map
hehe <- calc_compare2(bac, con_crop, season, pH, method = LSD2, method2 = "BH")
hehe
hehe <- calc_compare2(bac, con_crop, season, pH, method = LSD2)
hehe
hehe <- calc_compare2(bac, season, con_crop, pH, method = LSD2)
hehe
hehe@meta
hehe <- calc_compare2(bac, season, con_crop, pH, method = LSD2)
data = bac
.group1 = "con_crop"
.group2 = "season"
y = "pH"
.compare2 = methods::new("compare2")
meta = as.data.frame(data@meta)
meta = meta[,c(names(meta)[1], .group1, .group2, y)]
meta
# data = bac
.group1 = "season"
.group2 = "con_crop"
y = "pH"
.compare2 = methods::new("compare2")
meta = as.data.frame(data@meta)
meta = meta[,c(names(meta)[1], .group1, .group2, y)]
meta
# devtools::install_github("whkygl/easynem")
library(easynem)
LSD2 <- function(data, .group1, .group2, y, method2 = "none", ...){
# data = bac
# .group1 = "season"
# .group2 = "con_crop"
# y = "pH"
.compare2 = methods::new("compare2")
meta = as.data.frame(data@meta)
meta = meta[,c(names(meta)[1], .group1, .group2, y)]
.compare2@meta = meta
.compare2@temp = c("LSD2")
perform_lsd_test <- function(data2, ...) {
formu = paste0(y, "~", .group1)
formu = stats::as.formula(formu)
lsd_test = agricolae::LSD.test(stats::aov(formu, data = data2, ...), .group1, ...)
result1 = lsd_test$means
result1 = result1[,-1]
result1$group = rownames(result1)
result2 = lsd_test$groups
result2$group = rownames(result2)
result = merge(result1, result2, by = "group")
return(result)
}
results_list = lapply(split(meta, meta[[.group2]]), perform_lsd_test)
results <- do.call(rbind, Map(cbind, group2 = names(results_list), results_list))
names(results)[names(results) == "group2"] = .group2
names(results)[names(results) == "groups"] = "label"
names(results)[names(results) == "group"] = .group1
.compare2@result = results
return(.compare2)
}
hehe <- calc_compare2(bac, season, con_crop, pH, method = LSD2)
# devtools::install_github("whkygl/easynem")
library(easynem)
bac <- read_nem(tab = easynem_example("bacotu.csv"),
tax = easynem_example("bactax.csv"),
meta = easynem_example("meta.csv"))
LSD2 <- function(data, .group1, .group2, y, method2 = "none", ...){
# data = bac
# .group1 = "season"
# .group2 = "con_crop"
# y = "pH"
.compare2 = methods::new("compare2")
meta = as.data.frame(data@meta)
meta = meta[,c(names(meta)[1], .group1, .group2, y)]
.compare2@meta = meta
.compare2@temp = c("LSD2")
perform_lsd_test <- function(data2, ...) {
formu = paste0(y, "~", .group1)
formu = stats::as.formula(formu)
lsd_test = agricolae::LSD.test(stats::aov(formu, data = data2, ...), .group1, ...)
result1 = lsd_test$means
result1 = result1[,-1]
result1$group = rownames(result1)
result2 = lsd_test$groups
result2$group = rownames(result2)
result = merge(result1, result2, by = "group")
return(result)
}
results_list = lapply(split(meta, meta[[.group2]]), perform_lsd_test)
results <- do.call(rbind, Map(cbind, group2 = names(results_list), results_list))
names(results)[names(results) == "group2"] = .group2
names(results)[names(results) == "groups"] = "label"
names(results)[names(results) == "group"] = .group1
.compare2@result = results
return(.compare2)
}
hehe <- calc_compare2(bac, season, con_crop, pH, method = LSD2)
hehe
