rm(list = ls())
library(devtools)
load_all()
document()
check()
base::assign(".ptime", proc.time(), pos = "CheckExEnv")
tab = easynem_example("bacotu.csv")
tab
load_all()
?read_nem
read_nem
?easynem_example
path <- easynem_example("bacotu.csv")
path
readr::readr_example("chickens.csv")
load_all()
?read_nem
bac <- read_nem(tab = easynem_example("bacotu.csv"), tax = easynem_example("bactax.csv"))
View(bac)
document()
check()
load_all()
?read_nem
load_all()
library(devtools)
load_all()
?read_nem
?read_nem
bac <- read_nem(tab = easynem_example("bacotu.csv"), tax = easynem_example("bactax.csv"))
show(bac)
rm(list = ls())
library(devtools)
document()
check()
rm(list = ls())
library(devtools)
document()
check()
rm(list = ls())
library(devtools)
document()
check()
rm(list = ls())
library(devtools)
document()
check()
load_all()
bac <- read_nem(tab = easynem_example("bacotu.csv"), tax = easynem_example("bactax.csv"), meta = easynem_example("meta.csv"))
hehe = bac |> filter_name(meta, con_crop %in% c("Y2","Y11")) |> calc_compare(.group = con_crop, y = pH, method = TTest, alternative = "less") |> nem_plot()
hehe
hehe = bac |> filter_name(meta, con_crop %in% c("Y2","Y11")) |> calc_compare(.group = con_crop, y = pH, method = TTest, alternative = "less") |> nem_plot(type =2)
hehe
hehe = bac |> filter_name(meta, con_crop %in% c("Y2","Y11")) |> calc_compare(.group = con_crop, y = pH, method = TTest, alternative = "less") |>
nem_plot() + scale_fill_discrete(limits = c("Y2", "Y11"))
hehe
library(ggplot2)
hehe = bac |> filter_name(meta, con_crop %in% c("Y2","Y11")) |> calc_compare(.group = con_crop, y = pH, method = TTest, alternative = "less") |>
nem_plot() + scale_fill_discrete(limits = c("Y2", "Y11"))
hehe
hehe = bac |> filter_name(meta, con_crop %in% c("Y2","Y11")) |> calc_compare(.group = con_crop, y = pH, method = TTest, alternative = "less") |>
nem_plot() + scale_x_discrete(limits = c("Y2", "Y11"))
hehe
hehe = bac |> filter_name(meta, con_crop %in% c("Y2","Y11")) |> calc_compare(.group = con_crop, y = pH, method = TTest, alternative = "less") |>
nem_plot(type =2) + scale_x_discrete(limits = c("Y11", "Y2"))
hehe
library(devtools)
document()
check()
load_all()
bac <- read_nem(tab = easynem_example("bacotu.csv"), tax = easynem_example("bactax.csv"), meta = easynem_example("meta.csv"))
hehe = bac |> filter_name(meta, con_crop %in% c("Y2","Y11")) |> calc_compare(.group = con_crop, y = pH, method = TTest)
hehe
hehe = bac |> filter_name(meta, con_crop %in% c("Y2","Y11")) |> calc_compare(.group = con_crop, y = pH, method = WilcoxTest)
hehe
rm(list = ls())
devtools::install_github("whkygl/easynem", force = TRUE)
rm(list = ls())
library(devtools)
document()
check()
load_all()
library(ggplot2)
bac <- read_nem(tab = easynem_example("bacotu.csv"), tax = easynem_example("bactax.csv"), meta = easynem_example("meta.csv"))
hehe = bac |> filter_name(meta, con_crop %in% c("Y2","Y11")) |> calc_compare(.group = con_crop, y = pH, method = TTest)
hehe
hehe = bac |> filter_name(meta, con_crop %in% c("Y2","Y11")) |> calc_compare(.group = con_crop, y = pH, method = WilcoxTest)
hehe
hehe = bac |> filter_name(meta, con_crop %in% c("Y2","Y11")) |> calc_compare(.group = con_crop, y = pH, method = WilcoxTest,  paired = FALSE)
hehe
hehe = bac |> filter_name(meta, con_crop %in% c("Y2","Y11")) |> calc_compare(.group = con_crop, y = pH, method = WilcoxTest,  paired = FALSE, alternative = "less")
hehe
hehe = bac |> filter_name(meta, con_crop %in% c("Y2","Y11")) |> calc_compare(.group = con_crop, y = pH, method = WilcoxTest)|>
nem_plot(type =2) + scale_x_discrete(limits = c("Y11", "Y2"))
hehe
hehe = bac |> filter_name(meta, con_crop %in% c("Y2","Y11")) |> calc_compare(.group = con_crop, y = pH, method = WilcoxTest)
hehe
hehe = bac |> filter_name(meta, con_crop %in% c("Y2","Y11")) |> calc_compare(.group = con_crop, y = pH, method = WilcoxTest)|>
nem_plot() + scale_x_discrete(limits = c("Y11", "Y2"))
hehe
library(devtools)
document()
check()
check()
document()
warnings()
document()
check()
document()
check()
source("C:/Users/whkyg/Desktop/BaiduSyncdisk/easynem/wkg.R", echo=TRUE)
library(ggtern)
cition("ggtern")
citation("ggtern")
library(devtools)
document()
check()
3.14*(12^2)
library(readxl)
hehe2 <- read_excel("C:/Users/whkyg/Desktop/hehe2.xlsx")
View(hehe2)
library(tidyverse)
ggplot(hehe2, aes(x = r, y = v)) + geom_point()
ggplot(hehe2, aes(x = s, y = v)) + geom_point()
library(readxl)
hehe2 <- read_excel("C:/Users/whkyg/Desktop/hehe2.xlsx")
View(hehe2)
ggplot(hehe2, aes(x = s2, y = v)) + geom_point()
library(readxl)
hehe2 <- read_excel("C:/Users/whkyg/Desktop/hehe2.xlsx")
View(hehe2)
ggplot(hehe2, aes(x = s3, y = v)) + geom_point()
ggplot(hehe2, aes(x = s, y = v)) + geom_point()
ggplot(hehe2, aes(x = s3, y = v)) + geom_point()
View(hehe2)
# 使用ggplot2绘制图表
library(ggplot2)
data(ToothGrowth)
p <-  data %>%  # 使用ToothGrowth数据集作为输入，并将结果赋值给p2变量
mutate(group1 = as.factor(dose)) %>%  # 将dose列的值转换为因子类型（离散分类变量）
group_by(dose,supp) %>%  # 根据dose和supp两列进行分组
ggplot(aes(x = group1, y = len,color = supp)) +  # 创建基础绘图对象
stat_summary(fun.y = "mean", geom = "point", size = 5) +  # 绘制点，表示每个组别的均值，点的大小为
stat_summary(fun.data = "mean_se", geom = "errorbar", width = 0.2,linewidth = 1) +  # 绘制误差条，表示每个组别的标准差，误差条宽度为0.05
#scale_color_nejm() +  # 调整颜色主题为NEJM主题
xlab("Trentment")+ylab("Plant input")+#横纵表标题
geom_text(data=mark1,
aes(x=group1,y=len+20,label=groups),
color="#1bb4b8",
size = 8)+#添加字母标记
geom_text(data=mark2,
aes(x=group1,y=len+20,label=groups),
color="#eb7369",
size = 8)+#添加字母标记
geom_text(data=mark3,
aes(x=group1,y=len+10,label=groups),
color="#F5AA6E",
size = 8)+#添加字母标记
p <-  data %>%  # 使用ToothGrowth数据集作为输入，并将结果赋值给p2变量
mutate(group1 = as.factor(dose)) %>%  # 将dose列的值转换为因子类型（离散分类变量）
group_by(dose,supp) %>%  # 根据dose和supp两列进行分组
ggplot(aes(x = group1, y = len,color = supp)) +  # 创建基础绘图对象
stat_summary(fun.y = "mean", geom = "point", size = 5) +  # 绘制点，表示每个组别的均值，点的大小为
stat_summary(fun.data = "mean_se", geom = "errorbar", width = 0.2,linewidth = 1) +  # 绘制误差条，表示每个组别的标准差，误差条宽度为0.05
#scale_color_nejm() +  # 调整颜色主题为NEJM主题
xlab("Trentment")+ylab("Plant input")+#横纵表标题
geom_text(data=mark1,
aes(x=group1,y=len+20,label=groups),
color="#1bb4b8",
size = 8)+#添加字母标记
geom_text(data=mark2,
aes(x=group1,y=len+20,label=groups),
color="#eb7369",
size = 8)+#添加字母标记
geom_text(data=mark3,
aes(x=group1,y=len+10,label=groups),
color="#F5AA6E",
size = 8)
library(tidyverse)
p <-  data %>%  # 使用ToothGrowth数据集作为输入，并将结果赋值给p2变量
mutate(group1 = as.factor(dose)) %>%  # 将dose列的值转换为因子类型（离散分类变量）
group_by(dose,supp) %>%  # 根据dose和supp两列进行分组
ggplot(aes(x = group1, y = len,color = supp)) +  # 创建基础绘图对象
stat_summary(fun.y = "mean", geom = "point", size = 5) +  # 绘制点，表示每个组别的均值，点的大小为
stat_summary(fun.data = "mean_se", geom = "errorbar", width = 0.2,linewidth = 1) +  # 绘制误差条，表示每个组别的标准差，误差条宽度为0.05
#scale_color_nejm() +  # 调整颜色主题为NEJM主题
xlab("Trentment")+ylab("Plant input")+#横纵表标题
geom_text(data=mark1,
aes(x=group1,y=len+20,label=groups),
color="#1bb4b8",
size = 8)+#添加字母标记
geom_text(data=mark2,
aes(x=group1,y=len+20,label=groups),
color="#eb7369",
size = 8)+#添加字母标记
geom_text(data=mark3,
aes(x=group1,y=len+10,label=groups),
color="#F5AA6E",
size = 8)
library(tidyverse)
p <-  data %>%  # 使用ToothGrowth数据集作为输入，并将结果赋值给p2变量
mutate(group1 = as.factor(dose)) %>%  # 将dose列的值转换为因子类型（离散分类变量）
group_by(dose,supp) %>%  # 根据dose和supp两列进行分组
ggplot(aes(x = group1, y = len,color = supp)) +  # 创建基础绘图对象
stat_summary(fun.y = "mean", geom = "point", size = 5) +  # 绘制点，表示每个组别的均值，点的大小为
stat_summary(fun.data = "mean_se", geom = "errorbar", width = 0.2,linewidth = 1) +  # 绘制误差条，表示每个组别的标准差，误差条宽度为0.05
#scale_color_nejm() +  # 调整颜色主题为NEJM主题
xlab("Trentment")+ylab("Plant input")+#横纵表标题
geom_text(data=mark1,
aes(x=group1,y=len+20,label=groups),
color="#1bb4b8",
size = 8)+#添加字母标记
geom_text(data=mark2,
aes(x=group1,y=len+20,label=groups),
color="#eb7369",
size = 8)+#添加字母标记
geom_text(data=mark3,
aes(x=group1,y=len+10,label=groups),
color="#F5AA6E",
size = 8)
??mutate
p <-  data %>%  # 使用ToothGrowth数据集作为输入，并将结果赋值给p2变量
mutate(group1 = as.factor(dose))
data = data(ToothGrowth)
p <-  data %>%  # 使用ToothGrowth数据集作为输入，并将结果赋值给p2变量
mutate(group1 = as.factor(dose)) %>%  # 将dose列的值转换为因子类型（离散分类变量）
group_by(dose,supp) %>%  # 根据dose和supp两列进行分组
ggplot(aes(x = group1, y = len,color = supp)) +  # 创建基础绘图对象
stat_summary(fun.y = "mean", geom = "point", size = 5) +  # 绘制点，表示每个组别的均值，点的大小为
stat_summary(fun.data = "mean_se", geom = "errorbar", width = 0.2,linewidth = 1) +  # 绘制误差条，表示每个组别的标准差，误差条宽度为0.05
#scale_color_nejm() +  # 调整颜色主题为NEJM主题
xlab("Trentment")+ylab("Plant input")+#横纵表标题
geom_text(data=mark1,
aes(x=group1,y=len+20,label=groups),
color="#1bb4b8",
size = 8)+#添加字母标记
geom_text(data=mark2,
aes(x=group1,y=len+20,label=groups),
color="#eb7369",
size = 8)+#添加字母标记
geom_text(data=mark3,
aes(x=group1,y=len+10,label=groups),
color="#F5AA6E",
size = 8)
data %>%  # 使用ToothGrowth数据集作为输入，并将结果赋值给p2变量
mutate(group1 = as.factor(dose))
data = data(ToothGrowth)
force(ToothGrowth)
data$dose = as.character(data$dose)
data$dose
data = data(ToothGrowth)
data
class(data)
p <-  ToothGrowth %>%  # 使用ToothGrowth数据集作为输入，并将结果赋值给p2变量
mutate(group1 = as.factor(dose)) %>%  # 将dose列的值转换为因子类型（离散分类变量）
group_by(dose,supp) %>%  # 根据dose和supp两列进行分组
ggplot(aes(x = group1, y = len,color = supp)) +  # 创建基础绘图对象
stat_summary(fun.y = "mean", geom = "point", size = 5) +  # 绘制点，表示每个组别的均值，点的大小为
stat_summary(fun.data = "mean_se", geom = "errorbar", width = 0.2,linewidth = 1) +  # 绘制误差条，表示每个组别的标准差，误差条宽度为0.05
#scale_color_nejm() +  # 调整颜色主题为NEJM主题
xlab("Trentment")+ylab("Plant input")+#横纵表标题
geom_text(data=mark1,
aes(x=group1,y=len+20,label=groups),
color="#1bb4b8",
size = 8)+#添加字母标记
geom_text(data=mark2,
aes(x=group1,y=len+20,label=groups),
color="#eb7369",
size = 8)+#添加字母标记
geom_text(data=mark3,
aes(x=group1,y=len+10,label=groups),
color="#F5AA6E",
size = 8)
p <-  ToothGrowth %>%  # 使用ToothGrowth数据集作为输入，并将结果赋值给p2变量
mutate(group1 = as.factor(dose)) %>%  # 将dose列的值转换为因子类型（离散分类变量）
group_by(dose,supp) %>%  # 根据dose和supp两列进行分组
ggplot(aes(x = group1, y = len,color = supp)) +  # 创建基础绘图对象
stat_summary(fun.y = "mean", geom = "point", size = 5) +  # 绘制点，表示每个组别的均值，点的大小为
stat_summary(fun.data = "mean_se", geom = "errorbar", width = 0.2,linewidth = 1) +  # 绘制误差条，表示每个组别的标准差，误差条宽度为0.05
#scale_color_nejm() +  # 调整颜色主题为NEJM主题
xlab("Trentment")+ylab("Plant input")+#横纵表标题
geom_text(
aes(x=group1,y=len+20,label=groups),
color="#1bb4b8",
size = 8)+#添加字母标记
geom_text(
aes(x=group1,y=len+20,label=groups),
color="#eb7369",
size = 8)+#添加字母标记
geom_text(
aes(x=group1,y=len+10,label=groups),
color="#F5AA6E",
size = 8)
p
nemgenus <- read.csv("C:/Users/whkyg/Desktop/BaiduSyncdisk/easynem/inst/extdata/nemgenus.csv")
View(nemgenus)
class(nemgenus)
library(tidyverse)
install.packages("ggplot2")
library(tidyverse)
install.packages("ggplot2")
library(tidyverse)
nemgenus <- read.csv("C:/Users/whkyg/Desktop/BaiduSyncdisk/easynem/inst/extdata/nemgenus.csv")
View(nemgenus)
nemtab <- read_csv("C:/Users/whkyg/Desktop/BaiduSyncdisk/easynem/inst/extdata/nemgenus.csv")
class(nemtab)
View(nemtab)
View(nemtab)
use_data(nemtab)
library(devtools)
use_data(nemtab)
use_r("nemtab")
load("C:/Users/whkyg/Desktop/桌面2024-07-17/ggplot2-main/data/diamonds.rda")
View(diamonds)
?diamonds
View(nemgenus)
View(nemgenus)
rm(diamonds)
diamonds
?@format
View(nemtab)
View(nemtab)
View(nemtab)
library(devtools)
document()
load_all()
?nemtab
??nemtab
document()
?nemtab
load_all()
?nemtab
document()
document()
document()
?nemtab
?nem_database
warnings()
document()
?nemtab
library(devtools)
checK()
cheak()
check()
nemmeta <- read.csv("C:/Users/whkyg/Desktop/BaiduSyncdisk/easynem/inst/extdata/nemmeta.csv")
View(nemmeta)
nemmeta <- read_csv("C:/Users/whkyg/Desktop/BaiduSyncdisk/easynem/inst/extdata/nemmeta.csv")
library(tidyverse)
?read_csv
nemmeta <- read_csv("C:/Users/whkyg/Desktop/BaiduSyncdisk/easynem/inst/extdata/nemmeta.csv")
View(nemmeta)
library(devtools)
use_data(nemmeta)
use_r("nemmeta")
View(nemmeta)
View(nemmeta)
View(nemmeta)
View(nemmeta)
document()
load_all()
nemmeta
?nemmeta
nemtax <- read_csv("C:/Users/whkyg/Desktop/BaiduSyncdisk/easynem/inst/extdata/nemtaxonomy.csv")
View(nemtax)
use_data(nemtax)
use_r("nemtax")
View(nemtax)
?nem_database
library(devtools)
document()
check()
